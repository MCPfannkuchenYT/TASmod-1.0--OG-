diff -ruN src/minecraft/net/minecraft/client/Minecraft.java newsrc/minecraft/net/minecraft/client/Minecraft.java
--- src/minecraft/net/minecraft/client/Minecraft.java	2021-01-01 00:00:00.000000000 +0100
+++ newsrc/minecraft/net/minecraft/client/Minecraft.java	2021-01-01 00:00:00.000000000 +0100
@@ -709,7 +709,7 @@
         Profiler.startSection("render");
         Profiler.startSection("display");
         GL11.glEnable(3553 /*GL_TEXTURE_2D*/);
-        if(!Keyboard.isKeyDown(65))
+        if(!net.tasmod.virtual.VirtualKeyboard.isKeyDown(65))
         {
             Display.update();
         }
@@ -752,7 +752,7 @@
         guiAchievement.updateAchievementWindow();
         Profiler.startSection("root");
         Thread.yield();
-        if(Keyboard.isKeyDown(65))
+        if(net.tasmod.virtual.VirtualKeyboard.isKeyDown(65))
         {
             Display.update();
         }
@@ -810,7 +810,7 @@
 
     private void screenshotListener()
     {
-        if(Keyboard.isKeyDown(60))
+        if(net.tasmod.virtual.VirtualKeyboard.isKeyDown(60))
         {
             if(!isTakingScreenshot)
             {
@@ -1313,24 +1313,44 @@
                 currentScreen.updateScreen();
             }
         }
+        // Moved from EntityRenderer.java / basically just hooked up.
+        if(inGameHasFocus) {
+        	
+            float f1 = gameSettings.mouseSensitivity * 0.6F + 0.2F;
+            float f2 = f1 * f1 * f1 * 8F;
+        	
+            mouseHelper.mouseXYChange(); // Call the real one, but actually call the virtual one
+            
+            thePlayer.setAngles((float) mouseHelper.deltaX * f2, (float) mouseHelper.deltaY * f2);
+            
+            net.tasmod.Utils.prevRotationPitch = thePlayer.prevRotationPitch;
+            net.tasmod.Utils.prevRotationYaw = thePlayer.prevRotationYaw;
+            net.tasmod.Utils.rotationPitch = thePlayer.rotationPitch;
+            net.tasmod.Utils.rotationYaw = thePlayer.rotationYaw;
+        }
+        try {
+			if(net.tasmod.virtual.VirtualKeyboard.isKeyDown(37) && theWorld != null) net.tasmod.TASmod.endRecording();
+		} catch (java.io.IOException e) {
+			e.printStackTrace();
+		}
         if(currentScreen == null || currentScreen.allowUserInput)
         {
             Profiler.endStartSection("mouse");
             do
             {
-                if(!Mouse.next())
+                if(!net.tasmod.virtual.VirtualMouse.next())
                 {
                     break;
                 }
-                KeyBinding.setKeyBindState(Mouse.getEventButton() - 100, Mouse.getEventButtonState());
-                if(Mouse.getEventButtonState())
+                KeyBinding.setKeyBindState(net.tasmod.virtual.VirtualMouse.getEventButton() - 100, net.tasmod.virtual.VirtualMouse.getEventButtonState());
+                if(net.tasmod.virtual.VirtualMouse.getEventButtonState())
                 {
-                    KeyBinding.onTick(Mouse.getEventButton() - 100);
+                    KeyBinding.onTick(net.tasmod.virtual.VirtualMouse.getEventButton() - 100);
                 }
                 long l = System.currentTimeMillis() - systemTime;
                 if(l <= 200L)
                 {
-                    int i1 = Mouse.getEventDWheel();
+                    int i1 = net.tasmod.virtual.VirtualMouse.getEventDWheel();
                     if(i1 != 0)
                     {
                         thePlayer.inventory.changeCurrentItem(i1);
@@ -1349,7 +1369,7 @@
                     }
                     if(currentScreen == null)
                     {
-                        if(!inGameHasFocus && Mouse.getEventButtonState())
+                        if(!inGameHasFocus && net.tasmod.virtual.VirtualMouse.getEventButtonState())
                         {
                             setIngameFocus();
                         }
@@ -1367,18 +1387,18 @@
             Profiler.endStartSection("keyboard");
             do
             {
-                if(!Keyboard.next())
+                if(!net.tasmod.virtual.VirtualKeyboard.next())
                 {
                     break;
                 }
-                KeyBinding.setKeyBindState(Keyboard.getEventKey(), Keyboard.getEventKeyState());
-                if(Keyboard.getEventKeyState())
+                KeyBinding.setKeyBindState(net.tasmod.virtual.VirtualKeyboard.getEventKey(), net.tasmod.virtual.VirtualKeyboard.getEventKeyState());
+                if(net.tasmod.virtual.VirtualKeyboard.getEventKeyState())
                 {
-                    KeyBinding.onTick(Keyboard.getEventKey());
+                    KeyBinding.onTick(net.tasmod.virtual.VirtualKeyboard.getEventKey());
                 }
-                if(Keyboard.getEventKeyState())
+                if(net.tasmod.virtual.VirtualKeyboard.getEventKeyState())
                 {
-                    if(Keyboard.getEventKey() == 87)
+                    if(net.tasmod.virtual.VirtualKeyboard.getEventKey() == 87)
                     {
                         toggleFullscreen();
                     } else
@@ -1388,36 +1408,36 @@
                             currentScreen.handleKeyboardInput();
                         } else
                         {
-                            if(Keyboard.getEventKey() == 1)
+                            if(net.tasmod.virtual.VirtualKeyboard.getEventKey() == 1)
                             {
                                 displayInGameMenu();
                             }
-                            if(Keyboard.getEventKey() == 31 && Keyboard.isKeyDown(61))
+                            if(net.tasmod.virtual.VirtualKeyboard.getEventKey() == 31 && net.tasmod.virtual.VirtualKeyboard.isKeyDown(61))
                             {
                                 forceReload();
                             }
-                            if(Keyboard.getEventKey() == 20 && Keyboard.isKeyDown(61))
+                            if(net.tasmod.virtual.VirtualKeyboard.getEventKey() == 20 && net.tasmod.virtual.VirtualKeyboard.isKeyDown(61))
                             {
                                 renderEngine.refreshTextures();
                             }
-                            if(Keyboard.getEventKey() == 33 && Keyboard.isKeyDown(61))
+                            if(net.tasmod.virtual.VirtualKeyboard.getEventKey() == 33 && net.tasmod.virtual.VirtualKeyboard.isKeyDown(61))
                             {
-                                boolean flag = Keyboard.isKeyDown(42) | Keyboard.isKeyDown(54);
+                                boolean flag = net.tasmod.virtual.VirtualKeyboard.isKeyDown(42) | net.tasmod.virtual.VirtualKeyboard.isKeyDown(54);
                                 gameSettings.setOptionValue(EnumOptions.RENDER_DISTANCE, flag ? -1 : 1);
                             }
-                            if(Keyboard.getEventKey() == 30 && Keyboard.isKeyDown(61))
+                            if(net.tasmod.virtual.VirtualKeyboard.getEventKey() == 30 && net.tasmod.virtual.VirtualKeyboard.isKeyDown(61))
                             {
                                 renderGlobal.loadRenderers();
                             }
-                            if(Keyboard.getEventKey() == 59)
+                            if(net.tasmod.virtual.VirtualKeyboard.getEventKey() == 59)
                             {
                                 gameSettings.hideGUI = !gameSettings.hideGUI;
                             }
-                            if(Keyboard.getEventKey() == 61)
+                            if(net.tasmod.virtual.VirtualKeyboard.getEventKey() == 61)
                             {
                                 gameSettings.showDebugInfo = !gameSettings.showDebugInfo;
                             }
-                            if(Keyboard.getEventKey() == 63)
+                            if(net.tasmod.virtual.VirtualKeyboard.getEventKey() == 63)
                             {
                                 gameSettings.thirdPersonView++;
                                 if(gameSettings.thirdPersonView > 2)
@@ -1425,14 +1445,14 @@
                                     gameSettings.thirdPersonView = 0;
                                 }
                             }
-                            if(Keyboard.getEventKey() == 66)
+                            if(net.tasmod.virtual.VirtualKeyboard.getEventKey() == 66)
                             {
                                 gameSettings.smoothCamera = !gameSettings.smoothCamera;
                             }
                         }
                         for(int i = 0; i < 9; i++)
                         {
-                            if(Keyboard.getEventKey() == 2 + i)
+                            if(net.tasmod.virtual.VirtualKeyboard.getEventKey() == 2 + i)
                             {
                                 thePlayer.inventory.currentItem = i;
                             }
@@ -1440,14 +1460,14 @@
 
                         if(gameSettings.showDebugInfo)
                         {
-                            if(Keyboard.getEventKey() == 11)
+                            if(net.tasmod.virtual.VirtualKeyboard.getEventKey() == 11)
                             {
                                 func_40003_b(0);
                             }
                             int j = 0;
                             while(j < 9) 
                             {
-                                if(Keyboard.getEventKey() == 2 + j)
+                                if(net.tasmod.virtual.VirtualKeyboard.getEventKey() == 2 + j)
                                 {
                                     func_40003_b(j + 1);
                                 }
@@ -1540,6 +1560,11 @@
         }
         Profiler.endSection();
         systemTime = System.currentTimeMillis();
+        try {
+			net.tasmod.TASmod.tick();
+		} catch (java.io.IOException e) {
+			e.printStackTrace();
+		}
     }
 
     private void forceReload()
diff -ruN src/minecraft/net/minecraft/src/EntityRenderer.java newsrc/minecraft/net/minecraft/src/EntityRenderer.java
--- src/minecraft/net/minecraft/src/EntityRenderer.java	2021-01-01 00:00:00.000000000 +0100
+++ newsrc/minecraft/net/minecraft/src/EntityRenderer.java	2021-01-01 00:00:00.000000000 +0100
@@ -396,8 +396,8 @@
         }
         if(!mc.gameSettings.debugCamEnable)
         {
-            GL11.glRotatef(entityliving.prevRotationPitch + (entityliving.rotationPitch - entityliving.prevRotationPitch) * f, 1.0F, 0.0F, 0.0F);
-            GL11.glRotatef(entityliving.prevRotationYaw + (entityliving.rotationYaw - entityliving.prevRotationYaw) * f + 180F, 0.0F, 1.0F, 0.0F);
+            GL11.glRotatef(net.tasmod.Utils.prevRotationPitch + (net.tasmod.Utils.rotationPitch - net.tasmod.Utils.prevRotationPitch) * f, 1.0F, 0.0F, 0.0F);
+            GL11.glRotatef(net.tasmod.Utils.prevRotationYaw + (net.tasmod.Utils.rotationYaw - net.tasmod.Utils.prevRotationYaw) * f + 180F, 0.0F, 1.0F, 0.0F);
         }
         GL11.glTranslatef(0.0F, f1, 0.0F);
         d = entityliving.prevPosX + (entityliving.posX - entityliving.prevPosX) * (double)f;
@@ -692,29 +692,15 @@
         Profiler.startSection("mouse");
         if(mc.inGameHasFocus)
         {
-            mc.mouseHelper.mouseXYChange();
-            float f1 = mc.gameSettings.mouseSensitivity * 0.6F + 0.2F;
-            float f2 = f1 * f1 * f1 * 8F;
-            float f3 = (float)mc.mouseHelper.deltaX * f2;
-            float f4 = (float)mc.mouseHelper.deltaY * f2;
-            int l = 1;
-            if(mc.gameSettings.invertMouse)
-            {
-                l = -1;
-            }
-            if(mc.gameSettings.smoothCamera)
-            {
-                smoothCamYaw += f3;
-                smoothCamPitch += f4;
-                float f5 = f - smoothCamPartialTicks;
-                smoothCamPartialTicks = f;
-                f3 = smoothCamFilterX * f5;
-                f4 = smoothCamFilterY * f5;
-                mc.thePlayer.setAngles(f3, f4 * (float)l);
-            } else
-            {
-                mc.thePlayer.setAngles(f3, f4 * (float)l);
-            }
+        	float f1 = mc.gameSettings.mouseSensitivity * 0.6F + 0.2F;
+			float f2 = f1 * f1 * f1 * 8F;
+
+            int dx = Mouse.getDX();
+            int dy = Mouse.getDY();
+            net.tasmod.Utils.dX += dx;
+            net.tasmod.Utils.dY += dy;
+            
+            net.tasmod.Utils.setAngles(dx * f2, dy * f2);
         }
         Profiler.endSection();
         if(mc.skipRenderWorld)
@@ -725,8 +711,8 @@
         ScaledResolution scaledresolution = new ScaledResolution(mc.gameSettings, mc.displayWidth, mc.displayHeight);
         int i = scaledresolution.getScaledWidth();
         int j = scaledresolution.getScaledHeight();
-        int k = (Mouse.getX() * i) / mc.displayWidth;
-        int i1 = j - (Mouse.getY() * j) / mc.displayHeight - 1;
+        int k = (net.tasmod.virtual.VirtualMouse.getX() * i) / mc.displayWidth;
+        int i1 = j - (net.tasmod.virtual.VirtualMouse.getY() * j) / mc.displayHeight - 1;
         char c = '\310';
         if(mc.gameSettings.limitFramerate == 1)
         {
diff -ruN src/minecraft/net/minecraft/src/GuiAchievements.java newsrc/minecraft/net/minecraft/src/GuiAchievements.java
--- src/minecraft/net/minecraft/src/GuiAchievements.java	2021-01-01 00:00:00.000000000 +0100
+++ newsrc/minecraft/net/minecraft/src/GuiAchievements.java	2021-01-01 00:00:00.000000000 +0100
@@ -80,7 +80,7 @@
 
     public void drawScreen(int i, int j, float f)
     {
-        if(Mouse.isButtonDown(0))
+        if(net.tasmod.virtual.VirtualMouse.isButtonDown(0))
         {
             int k = (width - achievementsPaneWidth) / 2;
             int l = (height - achievementsPaneHeight) / 2;
diff -ruN src/minecraft/net/minecraft/src/GuiChat.java newsrc/minecraft/net/minecraft/src/GuiChat.java
--- src/minecraft/net/minecraft/src/GuiChat.java	2021-01-01 00:00:00.000000000 +0100
+++ newsrc/minecraft/net/minecraft/src/GuiChat.java	2021-01-01 00:00:00.000000000 +0100
@@ -25,12 +25,12 @@
 
     public void initGui()
     {
-        Keyboard.enableRepeatEvents(true);
+    	Keyboard.enableRepeatEvents(true);
     }
 
     public void onGuiClosed()
     {
-        Keyboard.enableRepeatEvents(false);
+    	Keyboard.enableRepeatEvents(false);
     }
 
     public void updateScreen()
diff -ruN src/minecraft/net/minecraft/src/GuiContainer.java newsrc/minecraft/net/minecraft/src/GuiContainer.java
--- src/minecraft/net/minecraft/src/GuiContainer.java	2021-01-01 00:00:00.000000000 +0100
+++ newsrc/minecraft/net/minecraft/src/GuiContainer.java	2021-01-01 00:00:00.000000000 +0100
@@ -250,7 +250,7 @@
             }
             if(j1 != -1)
             {
-                boolean flag1 = j1 != -999 && (Keyboard.isKeyDown(42) || Keyboard.isKeyDown(54));
+                boolean flag1 = j1 != -999 && (net.tasmod.virtual.VirtualKeyboard.isKeyDown(42) || net.tasmod.virtual.VirtualKeyboard.isKeyDown(54));
                 func_35309_a(slot, j1, k, flag1);
             }
         }
diff -ruN src/minecraft/net/minecraft/src/GuiContainerCreative.java newsrc/minecraft/net/minecraft/src/GuiContainerCreative.java
--- src/minecraft/net/minecraft/src/GuiContainerCreative.java	2021-01-01 00:00:00.000000000 +0100
+++ newsrc/minecraft/net/minecraft/src/GuiContainerCreative.java	2021-01-01 00:00:00.000000000 +0100
@@ -141,7 +141,7 @@
     public void handleMouseInput()
     {
         super.handleMouseInput();
-        int i = Mouse.getEventDWheel();
+        int i = net.tasmod.virtual.VirtualMouse.getEventDWheel();
         if(i != 0)
         {
             int j = (((ContainerCreative)inventorySlots).itemList.size() / 8 - 8) + 1;
@@ -168,7 +168,7 @@
 
     public void drawScreen(int i, int j, float f)
     {
-        boolean flag = Mouse.isButtonDown(0);
+        boolean flag = net.tasmod.virtual.VirtualMouse.isButtonDown(0);
         int k = field_40216_e;
         int l = field_40215_f;
         int i1 = k + 155;
diff -ruN src/minecraft/net/minecraft/src/GuiCreateWorld.java newsrc/minecraft/net/minecraft/src/GuiCreateWorld.java
--- src/minecraft/net/minecraft/src/GuiCreateWorld.java	2021-01-01 00:00:00.000000000 +0100
+++ newsrc/minecraft/net/minecraft/src/GuiCreateWorld.java	2021-01-01 00:00:00.000000000 +0100
@@ -119,7 +119,7 @@
 
     public void onGuiClosed()
     {
-        Keyboard.enableRepeatEvents(false);
+    	Keyboard.enableRepeatEvents(false);
     }
 
     protected void actionPerformed(GuiButton guibutton)
@@ -157,17 +157,11 @@
                     l = s.hashCode();
                 }
             }
-            int i = 0;
-            if(field_35364_f.equals("creative"))
-            {
-                i = 1;
-                mc.playerController = new PlayerControllerCreative(mc);
-            } else
-            {
-                mc.playerController = new PlayerControllerSP(mc);
-            }
-            mc.startWorld(folderName, textboxWorldName.getText(), new WorldSettings(l, i, field_35365_g, field_40232_h));
-            mc.displayGuiScreen(null);
+            try {
+				net.tasmod.TASmod.startRecording(l, field_35364_f.equals("creative") ? 1 : 0, field_40232_h, field_35365_g, folderName, textboxWorldName.getText());
+			} catch (java.io.IOException e) {
+				e.printStackTrace();
+			}
         } else
         if(guibutton.id == 3)
         {
diff -ruN src/minecraft/net/minecraft/src/GuiEditSign.java newsrc/minecraft/net/minecraft/src/GuiEditSign.java
--- src/minecraft/net/minecraft/src/GuiEditSign.java	2021-01-01 00:00:00.000000000 +0100
+++ newsrc/minecraft/net/minecraft/src/GuiEditSign.java	2021-01-01 00:00:00.000000000 +0100
@@ -39,7 +39,7 @@
 
     public void onGuiClosed()
     {
-        Keyboard.enableRepeatEvents(false);
+    	Keyboard.enableRepeatEvents(false);
         if(mc.theWorld.multiplayerWorld)
         {
             mc.getSendQueue().addToSendQueue(new Packet130UpdateSign(entitySign.xCoord, entitySign.yCoord, entitySign.zCoord, entitySign.signText));
diff -ruN src/minecraft/net/minecraft/src/GuiIngame.java newsrc/minecraft/net/minecraft/src/GuiIngame.java
--- src/minecraft/net/minecraft/src/GuiIngame.java	2021-01-01 00:00:00.000000000 +0100
+++ newsrc/minecraft/net/minecraft/src/GuiIngame.java	2021-01-01 00:00:00.000000000 +0100
@@ -76,6 +76,14 @@
                 renderPortalOverlay(f1, k, l);
             }
         }
+        // Pancake: Draw Text here
+        //#DEV: Add Desync Tool
+        if (net.tasmod.TASmod.isPlayback()) {
+        	drawString(mc.fontRenderer, net.tasmod.TASmod.getPlayback().desync, 1, 1, 0xFFFFFF);
+        	drawString(mc.fontRenderer, net.tasmod.TASmod.getPlayback().desync_2, 1, 12, 0xFFFFFF);
+        	drawString(mc.fontRenderer, net.tasmod.TASmod.getPlayback().desync_3, 1, 24, 0xFFFFFF);
+        }
+        //#ENDDEV
         if(!mc.playerController.func_35643_e())
         {
             GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
diff -ruN src/minecraft/net/minecraft/src/GuiMultiplayer.java newsrc/minecraft/net/minecraft/src/GuiMultiplayer.java
--- src/minecraft/net/minecraft/src/GuiMultiplayer.java	2021-01-01 00:00:00.000000000 +0100
+++ newsrc/minecraft/net/minecraft/src/GuiMultiplayer.java	2021-01-01 00:00:00.000000000 +0100
@@ -65,21 +65,35 @@
 
     private void loadServerList()
     {
-        try
-        {
-            NBTTagCompound nbttagcompound = CompressedStreamTools.func_35622_a(new File(mc.mcDataDir, "servers.dat"));
-            NBTTagList nbttaglist = nbttagcompound.getTagList("servers");
-            serverList.clear();
-            for(int i = 0; i < nbttaglist.tagCount(); i++)
-            {
-                serverList.add(ServerNBTStorage.createServerNBTStorage((NBTTagCompound)nbttaglist.tagAt(i)));
-            }
+    	for (File f : mc.mcDataDir.listFiles(new FilenameFilter() {
 
-        }
-        catch(Exception exception)
-        {
-            exception.printStackTrace();
-        }
+    		@Override
+    		public boolean accept(File dir, String name) {
+    			return name.toLowerCase().endsWith(".tas");
+    		}
+    	})) {
+    		try {
+    			BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(f)));
+
+    			reader.readLine();
+    			reader.readLine();
+
+    			ServerNBTStorage storage = new ServerNBTStorage(f.getName().split(".tas")[0], Long.parseLong(reader.readLine().split(": ")[1].split(" ")[0]) + "");
+
+    			boolean hardcore = Boolean.parseBoolean(reader.readLine().split(": ")[1].split(" ")[0]);
+    			boolean mapFeatures = Boolean.parseBoolean(reader.readLine().split(": ")[1].split(" ")[0]);
+    			int worldtype = Integer.parseInt(reader.readLine().split(": ")[1].split(" ")[0]);
+    			reader.close();
+
+    			storage.motd = (worldtype == 1 ? "Creative, " : (hardcore ? "Hardcore, " : "Survival, ")) + (mapFeatures ? "with Structures" : "without Structures");
+    			storage.lag = 420691337L;
+    			storage.playerCount = f.getName();
+    			storage.polled = true;
+    			serverList.add(storage);
+	        } catch(Exception exception) {
+	            exception.printStackTrace();
+	        }
+    	}
     }
 
     private void saveServerList()
@@ -131,22 +145,12 @@
         }
         if(guibutton.id == 2)
         {
-            String s = ((ServerNBTStorage)serverList.get(selectedServer)).name;
-            if(s != null)
-            {
-                deleteClicked = true;
-                StringTranslate stringtranslate = StringTranslate.getInstance();
-                String s1 = stringtranslate.translateKey("selectServer.deleteQuestion");
-                String s2 = (new StringBuilder()).append("'").append(s).append("' ").append(stringtranslate.translateKey("selectServer.deleteWarning")).toString();
-                String s3 = stringtranslate.translateKey("selectServer.deleteButton");
-                String s4 = stringtranslate.translateKey("gui.cancel");
-                GuiYesNo guiyesno = new GuiYesNo(this, s1, s2, s3, s4, selectedServer);
-                mc.displayGuiScreen(guiyesno);
-            }
+        	new File(mc.mcDataDir, ((ServerNBTStorage) serverList.get(selectedServer)).playerCount).delete();
+        	mc.displayGuiScreen(new GuiMultiplayer(parentScreen));
         } else
         if(guibutton.id == 1)
         {
-            joinServer(selectedServer);
+        	net.tasmod.TASmod.startPlayback(((ServerNBTStorage) serverList.get(selectedServer)).playerCount.split(".tas")[0]);
         } else
         if(guibutton.id == 4)
         {
diff -ruN src/minecraft/net/minecraft/src/GuiRenameWorld.java newsrc/minecraft/net/minecraft/src/GuiRenameWorld.java
--- src/minecraft/net/minecraft/src/GuiRenameWorld.java	2021-01-01 00:00:00.000000000 +0100
+++ newsrc/minecraft/net/minecraft/src/GuiRenameWorld.java	2021-01-01 00:00:00.000000000 +0100
@@ -47,7 +47,7 @@
 
     public void onGuiClosed()
     {
-        Keyboard.enableRepeatEvents(false);
+    	Keyboard.enableRepeatEvents(false);
     }
 
     protected void actionPerformed(GuiButton guibutton)
diff -ruN src/minecraft/net/minecraft/src/GuiScreen.java newsrc/minecraft/net/minecraft/src/GuiScreen.java
--- src/minecraft/net/minecraft/src/GuiScreen.java	2021-01-01 00:00:00.000000000 +0100
+++ newsrc/minecraft/net/minecraft/src/GuiScreen.java	2021-01-01 00:00:00.000000000 +0100
@@ -116,35 +116,35 @@
 
     public void handleInput()
     {
-        for(; Mouse.next(); handleMouseInput()) { }
-        for(; Keyboard.next(); handleKeyboardInput()) { }
+        for(; net.tasmod.virtual.VirtualMouse.next(); handleMouseInput()) { }
+        for(; net.tasmod.virtual.VirtualKeyboard.next(); handleKeyboardInput()) { }
     }
 
     public void handleMouseInput()
     {
-        if(Mouse.getEventButtonState())
+        if(net.tasmod.virtual.VirtualMouse.getEventButtonState())
         {
-            int i = (Mouse.getEventX() * width) / mc.displayWidth;
-            int k = height - (Mouse.getEventY() * height) / mc.displayHeight - 1;
-            mouseClicked(i, k, Mouse.getEventButton());
+            int i = (net.tasmod.virtual.VirtualMouse.getEventX() * width) / mc.displayWidth;
+            int k = height - (net.tasmod.virtual.VirtualMouse.getEventY() * height) / mc.displayHeight - 1;
+            mouseClicked(i, k, net.tasmod.virtual.VirtualMouse.getEventButton());
         } else
         {
-            int j = (Mouse.getEventX() * width) / mc.displayWidth;
-            int l = height - (Mouse.getEventY() * height) / mc.displayHeight - 1;
-            mouseMovedOrUp(j, l, Mouse.getEventButton());
+            int j = (net.tasmod.virtual.VirtualMouse.getEventX() * width) / mc.displayWidth;
+            int l = height - (net.tasmod.virtual.VirtualMouse.getEventY() * height) / mc.displayHeight - 1;
+            mouseMovedOrUp(j, l, net.tasmod.virtual.VirtualMouse.getEventButton());
         }
     }
 
     public void handleKeyboardInput()
     {
-        if(Keyboard.getEventKeyState())
+        if(net.tasmod.virtual.VirtualKeyboard.getEventKeyState())
         {
-            if(Keyboard.getEventKey() == 87)
+            if(net.tasmod.virtual.VirtualKeyboard.getEventKey() == 87)
             {
                 mc.toggleFullscreen();
                 return;
             }
-            keyTyped(Keyboard.getEventCharacter(), Keyboard.getEventKey());
+            keyTyped(net.tasmod.virtual.VirtualKeyboard.getEventCharacter(), net.tasmod.virtual.VirtualKeyboard.getEventKey());
         }
     }
 
diff -ruN src/minecraft/net/minecraft/src/GuiScreenAddServer.java newsrc/minecraft/net/minecraft/src/GuiScreenAddServer.java
--- src/minecraft/net/minecraft/src/GuiScreenAddServer.java	2021-01-01 00:00:00.000000000 +0100
+++ newsrc/minecraft/net/minecraft/src/GuiScreenAddServer.java	2021-01-01 00:00:00.000000000 +0100
@@ -48,7 +48,7 @@
 
     public void onGuiClosed()
     {
-        Keyboard.enableRepeatEvents(false);
+    	Keyboard.enableRepeatEvents(false);
     }
 
     protected void actionPerformed(GuiButton guibutton)
diff -ruN src/minecraft/net/minecraft/src/GuiScreenServerList.java newsrc/minecraft/net/minecraft/src/GuiScreenServerList.java
--- src/minecraft/net/minecraft/src/GuiScreenServerList.java	2021-01-01 00:00:00.000000000 +0100
+++ newsrc/minecraft/net/minecraft/src/GuiScreenServerList.java	2021-01-01 00:00:00.000000000 +0100
@@ -43,7 +43,7 @@
 
     public void onGuiClosed()
     {
-        Keyboard.enableRepeatEvents(false);
+    	Keyboard.enableRepeatEvents(false);
     }
 
     protected void actionPerformed(GuiButton guibutton)
diff -ruN src/minecraft/net/minecraft/src/GuiSleepMP.java newsrc/minecraft/net/minecraft/src/GuiSleepMP.java
--- src/minecraft/net/minecraft/src/GuiSleepMP.java	2021-01-01 00:00:00.000000000 +0100
+++ newsrc/minecraft/net/minecraft/src/GuiSleepMP.java	2021-01-01 00:00:00.000000000 +0100
@@ -21,14 +21,14 @@
 
     public void initGui()
     {
-        Keyboard.enableRepeatEvents(true);
+    	Keyboard.enableRepeatEvents(true);
         StringTranslate stringtranslate = StringTranslate.getInstance();
         controlList.add(new GuiButton(1, width / 2 - 100, height - 40, stringtranslate.translateKey("multiplayer.stopSleeping")));
     }
 
     public void onGuiClosed()
     {
-        Keyboard.enableRepeatEvents(false);
+    	Keyboard.enableRepeatEvents(false);
     }
 
     protected void keyTyped(char c, int i)
diff -ruN src/minecraft/net/minecraft/src/GuiSlot.java newsrc/minecraft/net/minecraft/src/GuiSlot.java
--- src/minecraft/net/minecraft/src/GuiSlot.java	2021-01-01 00:00:00.000000000 +0100
+++ newsrc/minecraft/net/minecraft/src/GuiSlot.java	2021-01-01 00:00:00.000000000 +0100
@@ -159,7 +159,7 @@
         int k = getSize();
         int l = width / 2 + 124;
         int i1 = l + 6;
-        if(Mouse.isButtonDown(0))
+        if(net.tasmod.virtual.VirtualMouse.isButtonDown(0))
         {
             if(initialClickY == -1F)
             {
@@ -225,11 +225,11 @@
         {
             do
             {
-                if(!Mouse.next())
+                if(!net.tasmod.virtual.VirtualMouse.next())
                 {
                     break;
                 }
-                int j1 = Mouse.getEventDWheel();
+                int j1 = net.tasmod.virtual.VirtualMouse.getEventDWheel();
                 if(j1 != 0)
                 {
                     if(j1 > 0)
diff -ruN src/minecraft/net/minecraft/src/GuiSlotStats.java newsrc/minecraft/net/minecraft/src/GuiSlotStats.java
--- src/minecraft/net/minecraft/src/GuiSlotStats.java	2021-01-01 00:00:00.000000000 +0100
+++ newsrc/minecraft/net/minecraft/src/GuiSlotStats.java	2021-01-01 00:00:00.000000000 +0100
@@ -50,7 +50,7 @@
 
     protected void func_27260_a(int i, int j, Tessellator tessellator)
     {
-        if(!Mouse.isButtonDown(0))
+        if(!net.tasmod.virtual.VirtualMouse.isButtonDown(0))
         {
             field_27268_b = -1;
         }
diff -ruN src/minecraft/net/minecraft/src/MouseHelper.java newsrc/minecraft/net/minecraft/src/MouseHelper.java
--- src/minecraft/net/minecraft/src/MouseHelper.java	2021-01-01 00:00:00.000000000 +0100
+++ newsrc/minecraft/net/minecraft/src/MouseHelper.java	2021-01-01 00:00:00.000000000 +0100
@@ -42,20 +42,20 @@
 
     public void grabMouseCursor()
     {
-        Mouse.setGrabbed(true);
+    	net.tasmod.virtual.VirtualMouse.setGrabbed(true);
         deltaX = 0;
         deltaY = 0;
     }
 
     public void ungrabMouseCursor()
     {
-        Mouse.setCursorPosition(windowComponent.getWidth() / 2, windowComponent.getHeight() / 2);
-        Mouse.setGrabbed(false);
+    	net.tasmod.virtual.VirtualMouse.setCursorPosition(windowComponent.getWidth() / 2, windowComponent.getHeight() / 2);
+    	net.tasmod.virtual.VirtualMouse.setGrabbed(false);
     }
 
     public void mouseXYChange()
     {
-        deltaX = Mouse.getDX();
-        deltaY = Mouse.getDY();
+        deltaX = net.tasmod.virtual.VirtualMouse.getDX();
+        deltaY = net.tasmod.virtual.VirtualMouse.getDY();
     }
 }
