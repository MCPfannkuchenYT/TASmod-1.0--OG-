diff -ruN build/src/minecraft/net/minecraft/client/Minecraft.java src/main/java/net/minecraft/client/Minecraft.java
--- build/src/minecraft/net/minecraft/client/Minecraft.java	2021-01-01 00:00:00.000000000 +0100
+++ src/main/java/net/minecraft/client/Minecraft.java	2021-01-01 00:00:00.000000000 +0100
@@ -133,7 +133,7 @@
     public int displayWidth;
     public int displayHeight;
     private OpenGlCapsChecker glCapabilities;
-    private Timer timer;
+    public Timer timer;
     public World theWorld;
     public RenderGlobal renderGlobal;
     public EntityPlayerSP thePlayer;
@@ -655,11 +655,11 @@
 
     private void func_40001_x()
     {
-        if(mcApplet != null && !mcApplet.isActive())
-        {
-            running = false;
-            return;
-        }
+//        if(mcApplet != null && !mcApplet.isActive())
+//        {
+//            running = false;
+//            return;
+//        }
         AxisAlignedBB.clearBoundingBoxPool();
         Vec3D.initialize();
         Profiler.startSection("root");
@@ -678,6 +678,7 @@
         }
         long l = System.nanoTime();
         Profiler.startSection("tick");
+        net.tasmod.TASmod.render(); // Call TASmod Render/Gameloop Tick before runTick() to be able to hijack that
         for(int i = 0; i < timer.elapsedTicks; i++)
         {
             ticksRan++;
@@ -731,10 +732,10 @@
         }
         GL11.glFlush();
         Profiler.endSection();
-        if(!Display.isActive() && fullscreen)
-        {
-            toggleFullscreen();
-        }
+//        if(!Display.isActive() && fullscreen)
+//        {
+//            toggleFullscreen();
+//        }
         Profiler.endSection();
         if(gameSettings.showDebugInfo)
         {
@@ -810,7 +811,7 @@
 
     private void screenshotListener()
     {
-        if(Keyboard.isKeyDown(60))
+        if(net.tasmod.virtual.VirtualKeyboard.isKey60Down)
         {
             if(!isTakingScreenshot)
             {
@@ -1020,10 +1021,10 @@
 
     public void setIngameFocus()
     {
-        if(!Display.isActive())
-        {
-            return;
-        }
+//        if(!Display.isActive())
+//        {
+//            return;
+//        }
         if(inGameHasFocus)
         {
             return;
@@ -1313,6 +1314,24 @@
                 currentScreen.updateScreen();
             }
         }
+        // Moved from EntityRenderer.java / basically just hooked up.
+        if(inGameHasFocus) {
+            
+            float f1 = gameSettings.mouseSensitivity * 0.6F + 0.2F;
+            float f2 = f1 * f1 * f1 * 8F;
+            
+            mouseHelper.mouseXYChange(); // Call the real one, but actually call the virtual one
+            
+            thePlayer.setAngles((float) mouseHelper.deltaX * f2, (float) mouseHelper.deltaY * f2);
+            
+            net.tasmod.Utils.prevRotationPitch = thePlayer.prevRotationPitch;
+            net.tasmod.Utils.prevRotationYaw = thePlayer.prevRotationYaw;
+            net.tasmod.Utils.rotationPitch = thePlayer.rotationPitch;
+            net.tasmod.Utils.rotationYaw = thePlayer.rotationYaw;
+        }
+        net.tasmod.Utils.lastX = Mouse.getEventX();
+        net.tasmod.Utils.lastY = Mouse.getEventY();
+        // End-Edit
         if(currentScreen == null || currentScreen.allowUserInput)
         {
             Profiler.endStartSection("mouse");
@@ -1540,6 +1559,7 @@
         }
         Profiler.endSection();
         systemTime = System.currentTimeMillis();
+        net.tasmod.TASmod.tick(); // Tick the TASmod
     }
 
     private void forceReload()
@@ -1945,16 +1965,27 @@
     {
         boolean flag = false;
         String s3 = s;
-        Frame frame = new Frame("Minecraft");
+        Frame frame = new net.tasmod.main.EmulatorFrame("Minecraft"); // Replace Minecrafts frame with a new one with some more stuff do it
         Canvas canvas = new Canvas();
         frame.setLayout(new BorderLayout());
         frame.add(canvas, "Center");
-        canvas.setPreferredSize(new Dimension(854, 480));
         frame.pack();
         frame.setLocationRelativeTo(null);
-        MinecraftImpl minecraftimpl = new MinecraftImpl(frame, canvas, null, 854, 480, flag, frame);
+        frame.setVisible(true);
+        try {
+        	while (!net.tasmod.main.Start.shouldStart) {
+        		Thread.sleep(20);
+        	}
+		} catch (InterruptedException e) {
+			e.printStackTrace();
+		}
+        int width = 1920;
+        int height = 1080;
+        canvas.setPreferredSize(new Dimension(width, height));
+        MinecraftImpl minecraftimpl = new MinecraftImpl(frame, canvas, null, width, height, flag, frame);
         Thread thread = new Thread(minecraftimpl, "Minecraft main thread");
         thread.setPriority(10);
+        net.tasmod.TASmod.mcThread = thread;
         minecraftimpl.minecraftUri = "www.minecraft.net";
         if(s3 != null && s1 != null)
         {
@@ -1968,7 +1999,6 @@
             String as[] = s2.split(":");
             minecraftimpl.setServer(as[0], Integer.parseInt(as[1]));
         }
-        frame.setVisible(true);
         frame.addWindowListener(new GameWindowListener(minecraftimpl, thread));
         thread.start();
     }
diff -ruN build/src/minecraft/net/minecraft/src/ChunkProvider.java src/main/java/net/minecraft/src/ChunkProvider.java
--- build/src/minecraft/net/minecraft/src/ChunkProvider.java	2021-01-01 00:00:00.000000000 +0100
+++ src/main/java/net/minecraft/src/ChunkProvider.java	2021-01-01 00:00:00.000000000 +0100
@@ -93,6 +93,11 @@
         Chunk chunk = (Chunk)chunkMap.getValueByKey(ChunkCoordIntPair.chunkXZ2Int(i, j));
         if(chunk == null)
         {
+            // Turn off all chunk generating from the rendering methods
+            boolean check = false;
+            for (final StackTraceElement stackTraceElement : Thread.currentThread().getStackTrace()) if (stackTraceElement.getMethodName().equals("runTick") || stackTraceElement.getMethodName().contains("changeWorld")) check = true;
+            if (!check) return emptyChunk;
+            // End-Edit
             return loadChunk(i, j);
         } else
         {
diff -ruN build/src/minecraft/net/minecraft/src/EntityDragon.java src/main/java/net/minecraft/src/EntityDragon.java
--- build/src/minecraft/net/minecraft/src/EntityDragon.java	2021-01-01 00:00:00.000000000 +0100
+++ src/main/java/net/minecraft/src/EntityDragon.java	2021-01-01 00:00:00.000000000 +0100
@@ -393,6 +393,9 @@
     private void func_41006_aA()
     {
         field_40163_ay = false;
+        // Create a local random for the dragon to pick a new path, so that it does not deadlock in line 418. This has to be done cuz otherwise id have to change the whole Entity rand
+        net.tasmod.random.WeightedRandomMod rand = new net.tasmod.random.WeightedRandomMod();
+        // End-Edit
         if(rand.nextInt(2) == 0 && worldObj.playerEntities.size() > 0)
         {
             field_40179_aC = (Entity)worldObj.playerEntities.get(rand.nextInt(worldObj.playerEntities.size()));
diff -ruN build/src/minecraft/net/minecraft/src/EntityLiving.java src/main/java/net/minecraft/src/EntityLiving.java
--- build/src/minecraft/net/minecraft/src/EntityLiving.java	2021-01-01 00:00:00.000000000 +0100
+++ src/main/java/net/minecraft/src/EntityLiving.java	2021-01-01 00:00:00.000000000 +0100
@@ -488,9 +488,9 @@
             {
                 double d = entity.posX - posX;
                 double d1;
-                for(d1 = entity.posZ - posZ; d * d + d1 * d1 < 0.0001D; d1 = (Math.random() - Math.random()) * 0.01D)
+                for(d1 = entity.posZ - posZ; d * d + d1 * d1 < 0.0001D; d1 = (Math.random()/* - Math.random() = 0*/) * 0.01D)
                 {
-                    d = (Math.random() - Math.random()) * 0.01D;
+                    d = (Math.random()/* - Math.random() = 0*/) * 0.01D; // Fix a deadlock
                 }
 
                 attackedAtYaw = (float)((Math.atan2(d1, d) * 180D) / 3.1415927410125732D) - rotationYaw;
diff -ruN build/src/minecraft/net/minecraft/src/EntityPlayerSP.java src/main/java/net/minecraft/src/EntityPlayerSP.java
--- build/src/minecraft/net/minecraft/src/EntityPlayerSP.java	2021-01-01 00:00:00.000000000 +0100
+++ src/main/java/net/minecraft/src/EntityPlayerSP.java	2021-01-01 00:00:00.000000000 +0100
@@ -25,7 +25,7 @@
 
     public MovementInput movementInput;
     protected Minecraft mc;
-    protected int sprintToggleTimer;
+    public int sprintToggleTimer;
     public int sprintingTicksLeft;
     public float renderArmYaw;
     public float renderArmPitch;
diff -ruN build/src/minecraft/net/minecraft/src/EntityRenderer.java src/main/java/net/minecraft/src/EntityRenderer.java
--- build/src/minecraft/net/minecraft/src/EntityRenderer.java	2021-01-01 00:00:00.000000000 +0100
+++ src/main/java/net/minecraft/src/EntityRenderer.java	2021-01-01 00:00:00.000000000 +0100
@@ -396,8 +396,11 @@
         }
         if(!mc.gameSettings.debugCamEnable)
         {
-            GL11.glRotatef(entityliving.prevRotationPitch + (entityliving.rotationPitch - entityliving.prevRotationPitch) * f, 1.0F, 0.0F, 0.0F);
-            GL11.glRotatef(entityliving.prevRotationYaw + (entityliving.rotationYaw - entityliving.prevRotationYaw) * f + 180F, 0.0F, 1.0F, 0.0F);
+            // This Code rotates the Camera matching the Players Yaw and Pitch
+            // For the Interpolation, this Camera will be using a custom coordinate that updates more than 20 times a second.
+            GL11.glRotatef(net.tasmod.Utils.prevRotationPitch + (net.tasmod.Utils.rotationPitch - net.tasmod.Utils.prevRotationPitch) * f, 1.0F, 0.0F, 0.0F);
+            GL11.glRotatef(net.tasmod.Utils.prevRotationYaw + (net.tasmod.Utils.rotationYaw - net.tasmod.Utils.prevRotationYaw) * f + 180F, 0.0F, 1.0F, 0.0F);
+            // End-Edit
         }
         GL11.glTranslatef(0.0F, f1, 0.0F);
         d = entityliving.prevPosX + (entityliving.posX - entityliving.prevPosX) * (double)f;
@@ -679,42 +682,30 @@
             updateLightmap();
         }
         Profiler.endSection();
-        if(!Display.isActive())
-        {
-            if(System.currentTimeMillis() - prevFrameTime > 500L)
-            {
-                mc.displayInGameMenu();
-            }
-        } else
-        {
+//        if(!Display.isActive())
+//        {
+//            if(System.currentTimeMillis() - prevFrameTime > 500L)
+//            {
+//                mc.displayInGameMenu();
+//            }
+//        } else
+//        {
             prevFrameTime = System.currentTimeMillis();
-        }
+//        }
         Profiler.startSection("mouse");
         if(mc.inGameHasFocus)
         {
-            mc.mouseHelper.mouseXYChange();
+            // Interpolation. Instead of rotating the player here, we do that in runTick() as if the Game would be running at 20 FPS. Instead we rotate a independent Variable.
             float f1 = mc.gameSettings.mouseSensitivity * 0.6F + 0.2F;
             float f2 = f1 * f1 * f1 * 8F;
-            float f3 = (float)mc.mouseHelper.deltaX * f2;
-            float f4 = (float)mc.mouseHelper.deltaY * f2;
-            int l = 1;
-            if(mc.gameSettings.invertMouse)
-            {
-                l = -1;
-            }
-            if(mc.gameSettings.smoothCamera)
-            {
-                smoothCamYaw += f3;
-                smoothCamPitch += f4;
-                float f5 = f - smoothCamPartialTicks;
-                smoothCamPartialTicks = f;
-                f3 = smoothCamFilterX * f5;
-                f4 = smoothCamFilterY * f5;
-                mc.thePlayer.setAngles(f3, f4 * (float)l);
-            } else
-            {
-                mc.thePlayer.setAngles(f3, f4 * (float)l);
-            }
+
+            int dx = net.tasmod.Utils.getOriginalX();
+            int dy = net.tasmod.Utils.getOriginalY();
+            net.tasmod.Utils.dX += dx;
+            net.tasmod.Utils.dY += dy;
+            
+            net.tasmod.Utils.setAngles(dx * f2, dy * f2);
+            // End-Edit
         }
         Profiler.endSection();
         if(mc.skipRenderWorld)
diff -ruN build/src/minecraft/net/minecraft/src/GuiAchievement.java src/main/java/net/minecraft/src/GuiAchievement.java
--- build/src/minecraft/net/minecraft/src/GuiAchievement.java	2021-01-01 00:00:00.000000000 +0100
+++ src/main/java/net/minecraft/src/GuiAchievement.java	2021-01-01 00:00:00.000000000 +0100
@@ -34,7 +34,7 @@
     {
         achievementGetLocalText = StatCollector.translateToLocal("achievement.get");
         achievementStatName = achievement.statName;
-        achievementTime = System.currentTimeMillis();
+        achievementTime = net.tasmod.tools.TickrateChanger.getMilliseconds();
         theAchievement = achievement;
         haveAchiement = false;
     }
@@ -43,7 +43,7 @@
     {
         achievementGetLocalText = achievement.statName;
         achievementStatName = achievement.getDescription();
-        achievementTime = System.currentTimeMillis() - 2500L;
+        achievementTime = net.tasmod.tools.TickrateChanger.getMilliseconds() - 2500L;
         theAchievement = achievement;
         haveAchiement = true;
     }
@@ -75,7 +75,7 @@
         {
             return;
         }
-        double d = (double)(System.currentTimeMillis() - achievementTime) / 3000D;
+        double d = (double)(net.tasmod.tools.TickrateChanger.getMilliseconds() - achievementTime) / 3000D;
         if(!haveAchiement && !haveAchiement && (d < 0.0D || d > 1.0D))
         {
             achievementTime = 0L;
diff -ruN build/src/minecraft/net/minecraft/src/GuiAchievements.java src/main/java/net/minecraft/src/GuiAchievements.java
--- build/src/minecraft/net/minecraft/src/GuiAchievements.java	2021-01-01 00:00:00.000000000 +0100
+++ src/main/java/net/minecraft/src/GuiAchievements.java	2021-01-01 00:00:00.000000000 +0100
@@ -80,7 +80,7 @@
 
     public void drawScreen(int i, int j, float f)
     {
-        if(Mouse.isButtonDown(0))
+        if(net.tasmod.virtual.VirtualMouse.isButton0Down)
         {
             int k = (width - achievementsPaneWidth) / 2;
             int l = (height - achievementsPaneHeight) / 2;
diff -ruN build/src/minecraft/net/minecraft/src/GuiContainerCreative.java src/main/java/net/minecraft/src/GuiContainerCreative.java
--- build/src/minecraft/net/minecraft/src/GuiContainerCreative.java	2021-01-01 00:00:00.000000000 +0100
+++ src/main/java/net/minecraft/src/GuiContainerCreative.java	2021-01-01 00:00:00.000000000 +0100
@@ -168,7 +168,7 @@
 
     public void drawScreen(int i, int j, float f)
     {
-        boolean flag = Mouse.isButtonDown(0);
+        boolean flag = net.tasmod.virtual.VirtualMouse.isButton0Down;
         int k = field_40216_e;
         int l = field_40215_f;
         int i1 = k + 155;
diff -ruN build/src/minecraft/net/minecraft/src/GuiIngame.java src/main/java/net/minecraft/src/GuiIngame.java
--- build/src/minecraft/net/minecraft/src/GuiIngame.java	2021-01-01 00:00:00.000000000 +0100
+++ src/main/java/net/minecraft/src/GuiIngame.java	2021-01-01 00:00:00.000000000 +0100
@@ -76,6 +76,15 @@
                 renderPortalOverlay(f1, k, l);
             }
         }
+        // Render TAS Stuff here. Does not have any effect on minecraft.
+        if (mc.theWorld != null) {
+            if (mc.currentScreen != null) {
+                if (mc.currentScreen.getClass().getSimpleName().contains("InfoHud")) net.tasmod.TASmod.infoHud.drawHud();
+            } else {
+                net.tasmod.TASmod.infoHud.drawHud();
+            }
+        }
+        // End-Edit
         if(!mc.playerController.func_35643_e())
         {
             GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
diff -ruN build/src/minecraft/net/minecraft/src/GuiSlot.java src/main/java/net/minecraft/src/GuiSlot.java
--- build/src/minecraft/net/minecraft/src/GuiSlot.java	2021-01-01 00:00:00.000000000 +0100
+++ src/main/java/net/minecraft/src/GuiSlot.java	2021-01-01 00:00:00.000000000 +0100
@@ -223,7 +223,9 @@
             }
         } else
         {
-            do
+            /*
+             * FIXME: This is a temporary fix for the GuiSlot because frame based Mouse Events are a big no no for TASmod
+             * do
             {
                 if(!Mouse.next())
                 {
@@ -242,7 +244,7 @@
                     }
                     amountScrolled += (j1 * slotHeight) / 2;
                 }
-            } while(true);
+            } while(true);*/
             initialClickY = -1F;
         }
         bindAmountScrolled();
diff -ruN build/src/minecraft/net/minecraft/src/ThreadDownloadResources.java src/main/java/net/minecraft/src/ThreadDownloadResources.java
--- build/src/minecraft/net/minecraft/src/ThreadDownloadResources.java	2021-01-01 00:00:00.000000000 +0100
+++ src/main/java/net/minecraft/src/ThreadDownloadResources.java	2021-01-01 00:00:00.000000000 +0100
@@ -59,7 +59,8 @@
                     {
                         continue;
                     }
-                    downloadAndInstallResource(url, s, l, i);
+                    // This is just a small change to fix the game audio, because the files aren't online on the original link anymore. By doing this i download the ogg files from my website instead.
+                    downloadAndInstallResource(new URL("https://maven.mgnet.work/archive/1.0-sounds/"), s, l, i);
                     if(closing)
                     {
                         return;
diff -ruN build/src/minecraft/net/minecraft/src/World.java src/main/java/net/minecraft/src/World.java
--- build/src/minecraft/net/minecraft/src/World.java	2021-01-01 00:00:00.000000000 +0100
+++ src/main/java/net/minecraft/src/World.java	2021-01-01 00:00:00.000000000 +0100
@@ -3452,6 +3452,7 @@
     public Random setRandomSeed(int i, int j, int k)
     {
         long l = (long)i * 0x4f9939f508L + (long)j * 0x1ef1565bd5L + getWorldInfo().getRandomSeed() + (long)k;
+        Random rand = new Random(); // Return a new Random instead of the worlds one
         rand.setSeed(l);
         return rand;
     }
