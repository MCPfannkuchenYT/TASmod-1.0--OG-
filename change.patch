==========> Minecraft.java
--- Minecraft.java
+++ Minecraft.java
@@ -121,0 +121,6 @@
+import com.minecrafttas.tasmodog.TASmod;
+import com.minecrafttas.tasmodog.MinecraftWindow;
+import com.minecrafttas.tasmodog.tools.FakeCamera;
+import com.minecrafttas.tasmodog.virtual.VirtualKeyboard;
+import com.minecrafttas.tasmodog.virtual.VirtualMouse;
+
@@ -136,1 +142,1 @@
-    private Timer timer;
+    public Timer timer;
@@ -180,1 +186,1 @@
-    private static File minecraftDir = null;
+    public static File minecraftDir = null;
@@ -566,0 +572,1 @@
+    	if (this.fullscreen) this.toggleFullscreen(); // disable fullscreen before exiting
@@ -602,1 +609,1 @@
-                System.exit(0);
+//                System.exit(0); // don't exit game after closing
@@ -621,0 +628,1 @@
+        TASmod.instance.init(this); // initialize tasmod
@@ -681,0 +689,1 @@
+        TASmod.instance.render(); // render tasmod
@@ -712,1 +721,1 @@
-        if(!Keyboard.isKeyDown(65))
+        if(!VirtualKeyboard.isKeyDown(65))
@@ -734,4 +743,6 @@
-        if(!Display.isActive() && fullscreen)
-        {
-            toggleFullscreen();
-        }
+        // don't leave fullscreen on focus lose
+        //if(!Display.isActive() && fullscreen)
+        //{
+        //    toggleFullscreen();
+        //}
+        // end
@@ -755,1 +766,1 @@
-        if(Keyboard.isKeyDown(65))
+        if(VirtualKeyboard.isKeyDown(65))
@@ -813,1 +824,1 @@
-        if(Keyboard.isKeyDown(60))
+        if(VirtualKeyboard.isKeyDown(60))
@@ -1023,4 +1034,6 @@
-        if(!Display.isActive())
-        {
-            return;
-        }
+    	// ignore focus changes
+        //if(!Display.isActive())
+        //{
+        //    return;
+        //}
+    	// end
@@ -1211,1 +1224,1 @@
-            Display.setFullscreen(fullscreen);
+            TASmod.instance.getMinecraftWindow().toggleFullscreen(this.fullscreen); // toggle fullscreen on the frame instead of the display
@@ -1316,0 +1329,16 @@
+        // Moved from EntityRenderer.java / hooked up to tick loop
+        if(this.inGameHasFocus) {
+            
+            float f1 = this.gameSettings.mouseSensitivity * 0.6F + 0.2F;
+            float f2 = f1 * f1 * f1 * 8F;
+            
+            this.mouseHelper.mouseXYChange();
+            
+            this.thePlayer.setAngles(this.mouseHelper.deltaX * f2, this.mouseHelper.deltaY * f2);
+            
+        	FakeCamera.prevPitch = this.thePlayer.prevRotationPitch;
+        	FakeCamera.prevYaw = this.thePlayer.prevRotationYaw;
+        	FakeCamera.pitch = this.thePlayer.rotationPitch;
+        	FakeCamera.yaw = this.thePlayer.rotationYaw;
+        }
+        // end
@@ -1321,1 +1350,1 @@
-                if(!Mouse.next())
+                if(!VirtualMouse.next())
@@ -1325,2 +1354,2 @@
-                KeyBinding.setKeyBindState(Mouse.getEventButton() - 100, Mouse.getEventButtonState());
-                if(Mouse.getEventButtonState())
+                KeyBinding.setKeyBindState(VirtualMouse.getEventButton() - 100, VirtualMouse.getEventButtonState());
+                if(VirtualMouse.getEventButtonState())
@@ -1328,1 +1357,1 @@
-                    KeyBinding.onTick(Mouse.getEventButton() - 100);
+                    KeyBinding.onTick(VirtualMouse.getEventButton() - 100);
@@ -1333,1 +1362,1 @@
-                    int i1 = Mouse.getEventDWheel();
+                    int i1 = VirtualMouse.getEventDWheel();
@@ -1352,1 +1381,1 @@
-                        if(!inGameHasFocus && Mouse.getEventButtonState())
+                        if(!inGameHasFocus && VirtualMouse.getEventButtonState())
@@ -1370,1 +1399,1 @@
-                if(!Keyboard.next())
+                if(!VirtualKeyboard.next())
@@ -1374,2 +1403,2 @@
-                KeyBinding.setKeyBindState(Keyboard.getEventKey(), Keyboard.getEventKeyState());
-                if(Keyboard.getEventKeyState())
+                KeyBinding.setKeyBindState(VirtualKeyboard.getEventKey(), VirtualKeyboard.getEventKeyState());
+                if(VirtualKeyboard.getEventKeyState())
@@ -1377,1 +1406,1 @@
-                    KeyBinding.onTick(Keyboard.getEventKey());
+                    KeyBinding.onTick(VirtualKeyboard.getEventKey());
@@ -1379,1 +1408,1 @@
-                if(Keyboard.getEventKeyState())
+                if(VirtualKeyboard.getEventKeyState())
@@ -1381,1 +1410,1 @@
-                    if(Keyboard.getEventKey() == 87)
+                    if(VirtualKeyboard.getEventKey() == 87)
@@ -1391,1 +1420,1 @@
-                            if(Keyboard.getEventKey() == 1)
+                            if(VirtualKeyboard.getEventKey() == 1)
@@ -1395,1 +1424,1 @@
-                            if(Keyboard.getEventKey() == 31 && Keyboard.isKeyDown(61))
+                            if(VirtualKeyboard.getEventKey() == 31 && VirtualKeyboard.isKeyDown(61))
@@ -1399,1 +1428,1 @@
-                            if(Keyboard.getEventKey() == 20 && Keyboard.isKeyDown(61))
+                            if(VirtualKeyboard.getEventKey() == 20 && VirtualKeyboard.isKeyDown(61))
@@ -1403,1 +1432,1 @@
-                            if(Keyboard.getEventKey() == 33 && Keyboard.isKeyDown(61))
+                            if(VirtualKeyboard.getEventKey() == 33 && VirtualKeyboard.isKeyDown(61))
@@ -1405,1 +1434,1 @@
-                                boolean flag = Keyboard.isKeyDown(42) | Keyboard.isKeyDown(54);
+                                boolean flag = VirtualKeyboard.isKeyDown(42) | VirtualKeyboard.isKeyDown(54);
@@ -1408,1 +1437,1 @@
-                            if(Keyboard.getEventKey() == 30 && Keyboard.isKeyDown(61))
+                            if(VirtualKeyboard.getEventKey() == 30 && VirtualKeyboard.isKeyDown(61))
@@ -1412,1 +1441,1 @@
-                            if(Keyboard.getEventKey() == 59)
+                            if(VirtualKeyboard.getEventKey() == 59)
@@ -1416,1 +1445,1 @@
-                            if(Keyboard.getEventKey() == 61)
+                            if(VirtualKeyboard.getEventKey() == 61)
@@ -1420,1 +1449,1 @@
-                            if(Keyboard.getEventKey() == 63)
+                            if(VirtualKeyboard.getEventKey() == 63)
@@ -1428,1 +1457,1 @@
-                            if(Keyboard.getEventKey() == 66)
+                            if(VirtualKeyboard.getEventKey() == 66)
@@ -1435,1 +1464,1 @@
-                            if(Keyboard.getEventKey() == 2 + i)
+                            if(VirtualKeyboard.getEventKey() == 2 + i)
@@ -1443,1 +1472,1 @@
-                            if(Keyboard.getEventKey() == 11)
+                            if(VirtualKeyboard.getEventKey() == 11)
@@ -1450,1 +1479,1 @@
-                                if(Keyboard.getEventKey() == 2 + j)
+                                if(VirtualKeyboard.getEventKey() == 2 + j)
@@ -1543,0 +1572,1 @@
+        TASmod.instance.tick(); // tick tasmod
@@ -1948,1 +1978,1 @@
-        Frame frame = new Frame("Minecraft");
+        Frame frame = new MinecraftWindow("Minecraft"); // replace minecraft frame with custom one
==========> BiomeEndDecorator.java
--- BiomeEndDecorator.java
+++ BiomeEndDecorator.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -27,1 +29,1 @@
-        if(decoRNG.nextInt(5) == 0)
+        if((KillTheRngOccurences.nextInt[0] % 5) == 0)
@@ -29,2 +31,2 @@
-            int i = chunk_X + decoRNG.nextInt(16) + 8;
-            int j = chunk_Z + decoRNG.nextInt(16) + 8;
+            int i = chunk_X + (KillTheRngOccurences.nextInt[1] % 16) + 8;
+            int j = chunk_Z + (KillTheRngOccurences.nextInt[2] % 16) + 8;
==========> BlockBrewingStand.java
--- BlockBrewingStand.java
+++ BlockBrewingStand.java
@@ -10,0 +10,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -105,1 +107,1 @@
-                    int i1 = field_40214_a.nextInt(21) + 10;
+                    int i1 = (KillTheRngOccurences.nextInt[3] % 21) + 10;
==========> BlockChest.java
--- BlockChest.java
+++ BlockChest.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -402,1 +404,1 @@
-                    int i1 = random.nextInt(21) + 10;
+                    int i1 = (KillTheRngOccurences.nextInt[4] % 21) + 10;
==========> BlockCrops.java
--- BlockCrops.java
+++ BlockCrops.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -39,1 +41,1 @@
-                if(random.nextInt((int)(25F / f) + 1) == 0)
+                if((KillTheRngOccurences.nextInt[6] % ((int)(25F / f) + 1)) == 0)
@@ -121,1 +123,1 @@
-            if(world.rand.nextInt(15) <= l)
+            if((KillTheRngOccurences.nextInt[5] % 15) <= l)
==========> BlockDispenser.java
--- BlockDispenser.java
+++ BlockDispenser.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -273,1 +275,1 @@
-                    int i1 = random.nextInt(21) + 10;
+                    int i1 = (KillTheRngOccurences.nextInt[7] % 21) + 10;
==========> BlockDragonEgg.java
--- BlockDragonEgg.java
+++ BlockDragonEgg.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -83,3 +85,3 @@
-            int i1 = (i + world.rand.nextInt(16)) - world.rand.nextInt(16);
-            int j1 = (j + world.rand.nextInt(8)) - world.rand.nextInt(8);
-            int k1 = (k + world.rand.nextInt(16)) - world.rand.nextInt(16);
+            int i1 = (i + (KillTheRngOccurences.nextInt[8] % 16)) - (KillTheRngOccurences.nextInt[9] % 16);
+            int j1 = (j + (KillTheRngOccurences.nextInt[10] % 8)) - (KillTheRngOccurences.nextInt[11] % 8);
+            int k1 = (k + (KillTheRngOccurences.nextInt[12] % 16)) - (KillTheRngOccurences.nextInt[13] % 16);
==========> BlockFarmland.java
--- BlockFarmland.java
+++ BlockFarmland.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -76,1 +78,1 @@
-        if(world.rand.nextInt(4) == 0)
+        if((KillTheRngOccurences.nextInt[14] % 4) == 0)
==========> BlockFire.java
--- BlockFire.java
+++ BlockFire.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -97,1 +99,1 @@
-            world.setBlockMetadata(i, j, k, l + random.nextInt(3) / 2);
+            world.setBlockMetadata(i, j, k, l + (KillTheRngOccurences.nextInt[15] % 3) / 2);
@@ -108,1 +110,1 @@
-        if(!flag && !canBlockCatchFire(world, i, j - 1, k) && l == 15 && random.nextInt(4) == 0)
+        if(!flag && !canBlockCatchFire(world, i, j - 1, k) && l == 15 && (KillTheRngOccurences.nextInt[16] % 4) == 0)
@@ -140,1 +142,1 @@
-                    if(j2 <= 0 || random.nextInt(l1) > j2 || world.isRaining() && world.canLightningStrikeAt(i1, k1, j1) || world.canLightningStrikeAt(i1 - 1, k1, k) || world.canLightningStrikeAt(i1 + 1, k1, j1) || world.canLightningStrikeAt(i1, k1, j1 - 1) || world.canLightningStrikeAt(i1, k1, j1 + 1))
+                    if(j2 <= 0 || (KillTheRngOccurences.nextInt[17] % l1) > j2 || world.isRaining() && world.canLightningStrikeAt(i1, k1, j1) || world.canLightningStrikeAt(i1 - 1, k1, k) || world.canLightningStrikeAt(i1 + 1, k1, j1) || world.canLightningStrikeAt(i1, k1, j1 - 1) || world.canLightningStrikeAt(i1, k1, j1 + 1))
@@ -144,1 +146,1 @@
-                    int k2 = l + random.nextInt(5) / 4;
+                    int k2 = l + (KillTheRngOccurences.nextInt[18] % 5) / 4;
@@ -161,1 +163,1 @@
-        if(random.nextInt(l) < j1)
+        if((KillTheRngOccurences.nextInt[19] % l) < j1)
@@ -164,1 +166,1 @@
-            if(random.nextInt(i1 + 10) < 5 && !world.canLightningStrikeAt(i, j, k))
+            if((KillTheRngOccurences.nextInt[20] % (i1 + 10)) < 5 && !world.canLightningStrikeAt(i, j, k))
@@ -166,1 +168,1 @@
-                int k1 = i1 + random.nextInt(5) / 4;
+                int k1 = i1 + (KillTheRngOccurences.nextInt[21] % 5) / 4;
==========> BlockFlowing.java
--- BlockFlowing.java
+++ BlockFlowing.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -80,1 +82,1 @@
-            if(blockMaterial == Material.lava && l < 8 && j1 < 8 && j1 > l && random.nextInt(4) != 0)
+            if(blockMaterial == Material.lava && l < 8 && j1 < 8 && j1 > l && (KillTheRngOccurences.nextInt[22] % 4) != 0)
==========> BlockFurnace.java
--- BlockFurnace.java
+++ BlockFurnace.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -233,1 +235,1 @@
-                        int i1 = furnaceRand.nextInt(21) + 10;
+                        int i1 = (KillTheRngOccurences.nextInt[23] % 21) + 10;
==========> BlockGlowStone.java
--- BlockGlowStone.java
+++ BlockGlowStone.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -22,1 +24,1 @@
-        return MathHelper.func_41084_a(quantityDropped(random) + random.nextInt(i + 1), 1, 4);
+        return MathHelper.func_41084_a(quantityDropped(random) + (KillTheRngOccurences.nextInt[24] % (i + 1)), 1, 4);
@@ -27,1 +29,1 @@
-        return 2 + random.nextInt(3);
+        return 2 + (KillTheRngOccurences.nextInt[25] % 3);
==========> BlockGrass.java
--- BlockGrass.java
+++ BlockGrass.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -77,3 +79,3 @@
-                int i1 = (i + random.nextInt(3)) - 1;
-                int j1 = (j + random.nextInt(5)) - 3;
-                int k1 = (k + random.nextInt(3)) - 1;
+                int i1 = (i + (KillTheRngOccurences.nextInt[26] % 3)) - 1;
+                int j1 = (j + (KillTheRngOccurences.nextInt[27] % 5)) - 3;
+                int k1 = (k + (KillTheRngOccurences.nextInt[28] % 3)) - 1;
==========> BlockGravel.java
--- BlockGravel.java
+++ BlockGravel.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -22,1 +24,1 @@
-        if(random.nextInt(10 - j * 3) == 0)
+        if((KillTheRngOccurences.nextInt[29] % (10 - j * 3)) == 0)
==========> BlockLeaves.java
--- BlockLeaves.java
+++ BlockLeaves.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -202,1 +204,1 @@
-        return random.nextInt(20) != 0 ? 0 : 1;
+        return (KillTheRngOccurences.nextInt[30] % 20) != 0 ? 0 : 1;
==========> BlockLever.java
--- BlockLever.java
+++ BlockLever.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -91,1 +93,1 @@
-            i1 = 5 + world.rand.nextInt(2);
+            i1 = 5 + (KillTheRngOccurences.nextInt[31] % 2);
==========> BlockMelon.java
--- BlockMelon.java
+++ BlockMelon.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -38,1 +40,1 @@
-        return 3 + random.nextInt(5);
+        return 3 + (KillTheRngOccurences.nextInt[32] % 5);
@@ -43,1 +45,1 @@
-        int j = quantityDropped(random) + random.nextInt(1 + i);
+        int j = quantityDropped(random) + (KillTheRngOccurences.nextInt[33] % (1 + i));
==========> BlockMushroom.java
--- BlockMushroom.java
+++ BlockMushroom.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -26,1 +28,1 @@
-        if(random.nextInt(25) == 0)
+        if((KillTheRngOccurences.nextInt[34] % 25) == 0)
@@ -46,3 +48,3 @@
-            int j1 = (i + random.nextInt(3)) - 1;
-            int l1 = (j + random.nextInt(2)) - random.nextInt(2);
-            int j2 = (k + random.nextInt(3)) - 1;
+            int j1 = (i + (KillTheRngOccurences.nextInt[35] % 3)) - 1;
+            int l1 = (j + (KillTheRngOccurences.nextInt[36] % 2)) - (KillTheRngOccurences.nextInt[37] % 2);
+            int j2 = (k + (KillTheRngOccurences.nextInt[38] % 3)) - 1;
@@ -57,3 +59,3 @@
-                j1 = (i + random.nextInt(3)) - 1;
-                l1 = (j + random.nextInt(2)) - random.nextInt(2);
-                j2 = (k + random.nextInt(3)) - 1;
+                j1 = (i + (KillTheRngOccurences.nextInt[39] % 3)) - 1;
+                l1 = (j + (KillTheRngOccurences.nextInt[40] % 2)) - (KillTheRngOccurences.nextInt[41] % 2);
+                j2 = (k + (KillTheRngOccurences.nextInt[42] % 3)) - 1;
==========> BlockMushroomCap.java
--- BlockMushroomCap.java
+++ BlockMushroomCap.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -64,1 +66,1 @@
-        int i = random.nextInt(10) - 7;
+        int i = (KillTheRngOccurences.nextInt[43] % 10) - 7;
==========> BlockMycelium.java
--- BlockMycelium.java
+++ BlockMycelium.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -59,3 +61,3 @@
-                int i1 = (i + random.nextInt(3)) - 1;
-                int j1 = (j + random.nextInt(5)) - 3;
-                int k1 = (k + random.nextInt(3)) - 1;
+                int i1 = (i + (KillTheRngOccurences.nextInt[44] % 3)) - 1;
+                int j1 = (j + (KillTheRngOccurences.nextInt[45] % 5)) - 3;
+                int k1 = (k + (KillTheRngOccurences.nextInt[46] % 3)) - 1;
==========> BlockNetherStalk.java
--- BlockNetherStalk.java
+++ BlockNetherStalk.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -38,1 +40,1 @@
-                if((biomegenbase instanceof BiomeGenHell) && random.nextInt(15) == 0)
+                if((biomegenbase instanceof BiomeGenHell) && (KillTheRngOccurences.nextInt[47] % 15) == 0)
@@ -77,1 +79,1 @@
-            j1 = 2 + world.rand.nextInt(3);
+            j1 = 2 + (KillTheRngOccurences.nextInt[48] % 3);
@@ -80,1 +82,1 @@
-                j1 += world.rand.nextInt(i1 + 1);
+                j1 += (KillTheRngOccurences.nextInt[49] % (i1 + 1));
==========> BlockOre.java
--- BlockOre.java
+++ BlockOre.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -43,1 +45,1 @@
-            return 4 + random.nextInt(5);
+            return 4 + (KillTheRngOccurences.nextInt[51] % 5);
@@ -54,1 +56,1 @@
-            int j = random.nextInt(i + 2) - 1;
+            int j = (KillTheRngOccurences.nextInt[50] % (i + 2)) - 1;
==========> BlockRedstoneOre.java
--- BlockRedstoneOre.java
+++ BlockRedstoneOre.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -75,1 +77,1 @@
-        return quantityDropped(random) + random.nextInt(i + 1);
+        return quantityDropped(random) + (KillTheRngOccurences.nextInt[53] % (i + 1));
@@ -80,1 +82,1 @@
-        return 4 + random.nextInt(2);
+        return 4 + (KillTheRngOccurences.nextInt[52] % 2);
==========> BlockSapling.java
--- BlockSapling.java
+++ BlockSapling.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -30,1 +32,1 @@
-        if(world.getBlockLightValue(i, j + 1, k) >= 9 && random.nextInt(7) == 0)
+        if(world.getBlockLightValue(i, j + 1, k) >= 9 && (KillTheRngOccurences.nextInt[54] % 7) == 0)
@@ -74,1 +76,1 @@
-            if(random.nextInt(10) == 0)
+            if((KillTheRngOccurences.nextInt[55] % 10) == 0)
==========> BlockStationary.java
--- BlockStationary.java
+++ BlockStationary.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -49,1 +51,1 @@
-            int l = random.nextInt(3);
+            int l = (KillTheRngOccurences.nextInt[56] % 3);
@@ -52,1 +54,1 @@
-                i += random.nextInt(3) - 1;
+                i += (KillTheRngOccurences.nextInt[57] % 3) - 1;
@@ -54,1 +56,1 @@
-                k += random.nextInt(3) - 1;
+                k += (KillTheRngOccurences.nextInt[58] % 3) - 1;
==========> BlockStem.java
--- BlockStem.java
+++ BlockStem.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -38,1 +40,1 @@
-            if(random.nextInt((int)(25F / f) + 1) == 0)
+            if((KillTheRngOccurences.nextInt[60] % ((int)(25F / f) + 1)) == 0)
@@ -63,1 +65,1 @@
-                    int i1 = random.nextInt(4);
+                    int i1 = (KillTheRngOccurences.nextInt[61] % 4);
@@ -216,1 +218,1 @@
-            if(world.rand.nextInt(15) <= l)
+            if((KillTheRngOccurences.nextInt[59] % 15) <= l)
==========> BlockTallGrass.java
--- BlockTallGrass.java
+++ BlockTallGrass.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -76,1 +78,1 @@
-        if(random.nextInt(8) == 0)
+        if((KillTheRngOccurences.nextInt[63] % 8) == 0)
@@ -87,1 +89,1 @@
-        return 1 + random.nextInt(i * 2 + 1);
+        return 1 + (KillTheRngOccurences.nextInt[62] % (i * 2 + 1));
==========> BlockTNT.java
--- BlockTNT.java
+++ BlockTNT.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -63,1 +65,1 @@
-        entitytntprimed.fuse = world.rand.nextInt(entitytntprimed.fuse / 4) + entitytntprimed.fuse / 8;
+        entitytntprimed.fuse = (KillTheRngOccurences.nextInt[64] % (entitytntprimed.fuse / 4)) + entitytntprimed.fuse / 8;
==========> BlockVine.java
--- BlockVine.java
+++ BlockVine.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -198,1 +200,1 @@
-        if(!world.multiplayerWorld && world.rand.nextInt(4) == 0)
+        if(!world.multiplayerWorld && (KillTheRngOccurences.nextInt[65] % 4) == 0)
@@ -233,1 +235,1 @@
-            int k1 = world.rand.nextInt(6);
+            int k1 = (KillTheRngOccurences.nextInt[66] % 6);
@@ -241,1 +243,1 @@
-                int j2 = world.rand.nextInt(16) & i1;
+                int j2 = (KillTheRngOccurences.nextInt[67] % 16) & i1;
@@ -300,1 +302,1 @@
-                    int k3 = world.rand.nextInt(16) & i1;
+                    int k3 = (KillTheRngOccurences.nextInt[68] % 16) & i1;
@@ -308,1 +310,1 @@
-                    int l3 = world.rand.nextInt(16) & i1;
+                    int l3 = (KillTheRngOccurences.nextInt[69] % 16) & i1;
==========> ChunkProvider.java
--- ChunkProvider.java
+++ ChunkProvider.java
@@ -96,0 +96,7 @@
+            // avoid inconsistent chunk generation by only rendering on tick thread
+            boolean check = false;
+            for (final StackTraceElement stackTraceElement : Thread.currentThread().getStackTrace())
+            	if (stackTraceElement.getMethodName().equals("runTick") || stackTraceElement.getMethodName().contains("changeWorld"))
+            		check = true;
+            if (!check) return emptyChunk;
+            // end
==========> EnchantmentHelper.java
--- EnchantmentHelper.java
+++ EnchantmentHelper.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -112,1 +114,1 @@
-        return (enchantmentModifierDamage.damageModifier + 1 >> 1) + enchantmentRand.nextInt((enchantmentModifierDamage.damageModifier >> 1) + 1);
+        return (enchantmentModifierDamage.damageModifier + 1 >> 1) + (KillTheRngOccurences.nextInt[74] % ((enchantmentModifierDamage.damageModifier >> 1) + 1));
@@ -122,1 +124,1 @@
-            return 1 + enchantmentRand.nextInt(enchantmentModifierLiving.livingModifier);
+            return 1 + (KillTheRngOccurences.nextInt[70] % enchantmentModifierLiving.livingModifier);
@@ -186,2 +188,2 @@
-        j = 1 + random.nextInt((j >> 1) + 1) + random.nextInt(j + 1);
-        int l = random.nextInt(5) + j;
+        j = 1 + (KillTheRngOccurences.nextInt[71] % ((j >> 1) + 1)) + (KillTheRngOccurences.nextInt[72] % (j + 1));
+        int l = (KillTheRngOccurences.nextInt[73] % 5) + j;
@@ -209,1 +211,1 @@
-        j = 1 + random.nextInt((j >> 1) + 1) + random.nextInt((j >> 1) + 1);
+        j = 1 + (KillTheRngOccurences.nextInt[75] % ((j >> 1) + 1)) + (KillTheRngOccurences.nextInt[76] % ((j >> 1) + 1));
@@ -222,1 +224,1 @@
-                for(int i1 = l >> 1; random.nextInt(50) <= i1; i1 >>= 1)
+                for(int i1 = l >> 1; (KillTheRngOccurences.nextInt[77] % 50) <= i1; i1 >>= 1)
==========> EntityAnimal.java
--- EntityAnimal.java
+++ EntityAnimal.java
@@ -10,0 +10,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -267,1 +269,1 @@
-        return 1 + worldObj.rand.nextInt(3);
+        return 1 + (KillTheRngOccurences.nextInt[78] % 3);
==========> EntityArrow.java
--- EntityArrow.java
+++ EntityArrow.java
@@ -10,0 +10,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -228,1 +230,1 @@
-                    j1 += rand.nextInt(j1 / 2 + 2);
+                    j1 += (KillTheRngOccurences.nextInt[79] % (j1 / 2 + 2));
==========> EntityBlaze.java
--- EntityBlaze.java
+++ EntityBlaze.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -187,1 +189,1 @@
-            int j = rand.nextInt(2 + i);
+            int j = (KillTheRngOccurences.nextInt[80] % (2 + i));
==========> EntityChicken.java
--- EntityChicken.java
+++ EntityChicken.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -32,1 +34,1 @@
-        timeUntilNextEgg = rand.nextInt(6000) + 6000;
+        timeUntilNextEgg = (KillTheRngOccurences.nextInt[81] % 6000) + 6000;
@@ -68,1 +70,1 @@
-            timeUntilNextEgg = rand.nextInt(6000) + 6000;
+            timeUntilNextEgg = (KillTheRngOccurences.nextInt[82] % 6000) + 6000;
@@ -108,1 +110,1 @@
-        int j = rand.nextInt(3) + rand.nextInt(1 + i);
+        int j = (KillTheRngOccurences.nextInt[83] % 3) + (KillTheRngOccurences.nextInt[84] % (1 + i));
==========> EntityCow.java
--- EntityCow.java
+++ EntityCow.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -65,1 +67,1 @@
-        int j = rand.nextInt(3) + rand.nextInt(1 + i);
+        int j = (KillTheRngOccurences.nextInt[85] % 3) + (KillTheRngOccurences.nextInt[86] % (1 + i));
@@ -71,1 +73,1 @@
-        j = rand.nextInt(3) + 1 + rand.nextInt(1 + i);
+        j = (KillTheRngOccurences.nextInt[87] % 3) + 1 + (KillTheRngOccurences.nextInt[88] % (1 + i));
==========> EntityCreature.java
--- EntityCreature.java
+++ EntityCreature.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -65,1 +67,1 @@
-        if(!hasAttacked && entityToAttack != null && (pathToEntity == null || rand.nextInt(20) == 0))
+        if(!hasAttacked && entityToAttack != null && (pathToEntity == null || (KillTheRngOccurences.nextInt[89] % 20) == 0))
@@ -69,1 +71,1 @@
-        if(!hasAttacked && (pathToEntity == null && rand.nextInt(180) == 0 || rand.nextInt(120) == 0 || fleeingTick > 0) && entityAge < 100)
+        if(!hasAttacked && (pathToEntity == null && (KillTheRngOccurences.nextInt[90] % 180) == 0 || (KillTheRngOccurences.nextInt[91] % 120) == 0 || fleeingTick > 0) && entityAge < 100)
@@ -77,1 +79,1 @@
-        if(pathToEntity == null || rand.nextInt(100) == 0)
+        if(pathToEntity == null || (KillTheRngOccurences.nextInt[92] % 100) == 0)
@@ -158,3 +160,3 @@
-            int i1 = MathHelper.floor_double((posX + (double)rand.nextInt(13)) - 6D);
-            int j1 = MathHelper.floor_double((posY + (double)rand.nextInt(7)) - 3D);
-            int k1 = MathHelper.floor_double((posZ + (double)rand.nextInt(13)) - 6D);
+            int i1 = MathHelper.floor_double((posX + (double)(KillTheRngOccurences.nextInt[93] % 13)) - 6D);
+            int j1 = MathHelper.floor_double((posY + (double)(KillTheRngOccurences.nextInt[94] % 7)) - 3D);
+            int k1 = MathHelper.floor_double((posZ + (double)(KillTheRngOccurences.nextInt[95] % 13)) - 6D);
==========> EntityCreeper.java
--- EntityCreeper.java
+++ EntityCreeper.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -117,1 +119,1 @@
-            dropItem(Item.record13.shiftedIndex + rand.nextInt(2), 1);
+            dropItem(Item.record13.shiftedIndex + (KillTheRngOccurences.nextInt[96] % 2), 1);
==========> EntityDragon.java
--- EntityDragon.java
+++ EntityDragon.java
@@ -9,0 +9,2 @@
+import com.minecrafttas.tasmodog.tools.KillTheRngOccurences;
+
@@ -322,1 +324,1 @@
-        if(rand.nextInt(10) == 0)
+        if((KillTheRngOccurences.nextInt[97] % 10) == 0)
@@ -396,1 +398,1 @@
-        if(rand.nextInt(2) == 0 && worldObj.playerEntities.size() > 0)
+        if((KillTheRngOccurences.nextInt[98] % 2) == 0 && worldObj.playerEntities.size() > 0)
@@ -398,1 +400,1 @@
-            field_40179_aC = (Entity)worldObj.playerEntities.get(rand.nextInt(worldObj.playerEntities.size()));
+            field_40179_aC = (Entity)worldObj.playerEntities.get((KillTheRngOccurences.nextInt[99] % (worldObj.playerEntities.size())));
==========> EntityPlayerSP.java
--- EntityPlayerSP.java
+++ EntityPlayerSP.java
@@ -28,1 +28,1 @@
-    protected int sprintToggleTimer;
+    public int sprintToggleTimer;
==========> EntityRenderer.java
--- EntityRenderer.java
+++ EntityRenderer.java
@@ -18,0 +18,3 @@
+import com.minecrafttas.tasmodog.tools.FakeCamera;
+import com.minecrafttas.tasmodog.virtual.VirtualMouse;
+
@@ -399,2 +402,4 @@
-            GL11.glRotatef(entityliving.prevRotationPitch + (entityliving.rotationPitch - entityliving.prevRotationPitch) * f, 1.0F, 0.0F, 0.0F);
-            GL11.glRotatef(entityliving.prevRotationYaw + (entityliving.rotationYaw - entityliving.prevRotationYaw) * f + 180F, 0.0F, 1.0F, 0.0F);
+            // rotate camera to virtual camera instead of player camera
+        	GL11.glRotatef(FakeCamera.prevPitch + (FakeCamera.pitch - FakeCamera.pitch) * f, 1.0F, 0.0F, 0.0F);
+        	GL11.glRotatef(FakeCamera.prevYaw + (FakeCamera.yaw - FakeCamera.yaw) * f + 180F, 0.0F, 1.0F, 0.0F);
+            // end
@@ -682,8 +687,9 @@
-        if(!Display.isActive())
-        {
-            if(System.currentTimeMillis() - prevFrameTime > 500L)
-            {
-                mc.displayInGameMenu();
-            }
-        } else
-        {
+        // don't pause game if inactive for more than 500 milliseconds
+        //if(!Display.isActive())
+        //{
+        //    if(System.currentTimeMillis() - prevFrameTime > 500L)
+        //    {
+        //        mc.displayInGameMenu();
+        //    }
+        //} else
+        //{
@@ -691,1 +697,2 @@
-        }
+        //}
+        // end
@@ -695,1 +702,1 @@
-            mc.mouseHelper.mouseXYChange();
+            // rotate virtual camera instead of actual player (see minecraft runTick for player camera rotation)
@@ -698,20 +705,6 @@
-            float f3 = (float)mc.mouseHelper.deltaX * f2;
-            float f4 = (float)mc.mouseHelper.deltaY * f2;
-            int l = 1;
-            if(mc.gameSettings.invertMouse)
-            {
-                l = -1;
-            }
-            if(mc.gameSettings.smoothCamera)
-            {
-                smoothCamYaw += f3;
-                smoothCamPitch += f4;
-                float f5 = f - smoothCamPartialTicks;
-                smoothCamPartialTicks = f;
-                f3 = smoothCamFilterX * f5;
-                f4 = smoothCamFilterY * f5;
-                mc.thePlayer.setAngles(f3, f4 * (float)l);
-            } else
-            {
-                mc.thePlayer.setAngles(f3, f4 * (float)l);
-            }
+
+            int dx = VirtualMouse.getDX();
+            int dy = VirtualMouse.getDY();
+            
+            FakeCamera.setFakeAngles(dx * f2, dy * f2);
+            // end
@@ -728,2 +721,2 @@
-        int k = (Mouse.getX() * i) / mc.displayWidth;
-        int i1 = j - (Mouse.getY() * j) / mc.displayHeight - 1;
+        int k = (VirtualMouse.getX() * i) / mc.displayWidth;
+        int i1 = j - (VirtualMouse.getY() * j) / mc.displayHeight - 1;
==========> GuiAchievement.java
--- GuiAchievement.java
+++ GuiAchievement.java
@@ -10,0 +10,2 @@
+import com.minecrafttas.tasmodog.TASmod;
+
@@ -37,1 +39,1 @@
-        achievementTime = System.currentTimeMillis();
+        achievementTime = TASmod.instance.getTickrateChanger().currentTimeMillis();
@@ -46,1 +48,1 @@
-        achievementTime = System.currentTimeMillis() - 2500L;
+        achievementTime = TASmod.instance.getTickrateChanger().currentTimeMillis() - 2500L;
@@ -78,1 +80,1 @@
-        double d = (double)(System.currentTimeMillis() - achievementTime) / 3000D;
+        double d = (double)(TASmod.instance.getTickrateChanger().currentTimeMillis() - achievementTime) / 3000D;
==========> GuiAchievements.java
--- GuiAchievements.java
+++ GuiAchievements.java
@@ -10,1 +10,0 @@
-import org.lwjgl.input.Mouse;
@@ -13,0 +12,2 @@
+import com.minecrafttas.tasmodog.virtual.VirtualMouse;
+
@@ -83,1 +84,1 @@
-        if(Mouse.isButtonDown(0))
+        if(VirtualMouse.isButtonDown(0))
==========> GuiContainer.java
--- GuiContainer.java
+++ GuiContainer.java
@@ -12,0 +12,2 @@
+import com.minecrafttas.tasmodog.virtual.VirtualKeyboard;
+
@@ -253,1 +255,1 @@
-                boolean flag1 = j1 != -999 && (Keyboard.isKeyDown(42) || Keyboard.isKeyDown(54));
+                boolean flag1 = j1 != -999 && (VirtualKeyboard.isKeyDown(42) || VirtualKeyboard.isKeyDown(54));
==========> GuiContainerCreative.java
--- GuiContainerCreative.java
+++ GuiContainerCreative.java
@@ -12,0 +12,2 @@
+import com.minecrafttas.tasmodog.virtual.VirtualMouse;
+
@@ -144,1 +146,1 @@
-        int i = Mouse.getEventDWheel();
+        int i = VirtualMouse.getEventDWheel();
@@ -171,1 +173,1 @@
-        boolean flag = Mouse.isButtonDown(0);
+        boolean flag = VirtualMouse.isButtonDown(0);
==========> GuiIngame.java
--- GuiIngame.java
+++ GuiIngame.java
@@ -13,0 +13,3 @@
+import com.minecrafttas.tasmodog.TASmod;
+import com.minecrafttas.tasmodog.tools.InfoHud;
+
@@ -79,0 +82,4 @@
+        // draw info hud
+        if (((this.mc.currentScreen instanceof InfoHud) || (this.mc.currentScreen == null)) && this.mc.theWorld != null)
+        	TASmod.instance.getInfoHud().drawHud();
+        // end
==========> GuiScreen.java
--- GuiScreen.java
+++ GuiScreen.java
@@ -14,0 +14,3 @@
+import com.minecrafttas.tasmodog.virtual.VirtualKeyboard;
+import com.minecrafttas.tasmodog.virtual.VirtualMouse;
+
@@ -119,2 +122,2 @@
-        for(; Mouse.next(); handleMouseInput()) { }
-        for(; Keyboard.next(); handleKeyboardInput()) { }
+        for(; VirtualMouse.next(); handleMouseInput()) { }
+        for(; VirtualKeyboard.next(); handleKeyboardInput()) { }
@@ -125,1 +128,1 @@
-        if(Mouse.getEventButtonState())
+        if(VirtualMouse.getEventButtonState())
@@ -127,3 +130,3 @@
-            int i = (Mouse.getEventX() * width) / mc.displayWidth;
-            int k = height - (Mouse.getEventY() * height) / mc.displayHeight - 1;
-            mouseClicked(i, k, Mouse.getEventButton());
+            int i = (VirtualMouse.getEventX() * width) / mc.displayWidth;
+            int k = height - (VirtualMouse.getEventY() * height) / mc.displayHeight - 1;
+            mouseClicked(i, k, VirtualMouse.getEventButton());
@@ -132,3 +135,3 @@
-            int j = (Mouse.getEventX() * width) / mc.displayWidth;
-            int l = height - (Mouse.getEventY() * height) / mc.displayHeight - 1;
-            mouseMovedOrUp(j, l, Mouse.getEventButton());
+            int j = (VirtualMouse.getEventX() * width) / mc.displayWidth;
+            int l = height - (VirtualMouse.getEventY() * height) / mc.displayHeight - 1;
+            mouseMovedOrUp(j, l, VirtualMouse.getEventButton());
@@ -140,1 +143,1 @@
-        if(Keyboard.getEventKeyState())
+        if(VirtualKeyboard.getEventKeyState())
@@ -142,1 +145,1 @@
-            if(Keyboard.getEventKey() == 87)
+            if(VirtualKeyboard.getEventKey() == 87)
@@ -147,1 +150,1 @@
-            keyTyped(Keyboard.getEventCharacter(), Keyboard.getEventKey());
+            keyTyped(VirtualKeyboard.getEventCharacter(), VirtualKeyboard.getEventKey());
==========> GuiSlot.java
--- GuiSlot.java
+++ GuiSlot.java
@@ -9,0 +9,1 @@
+
@@ -12,0 +13,2 @@
+import com.minecrafttas.tasmodog.virtual.VirtualMouse;
+
@@ -162,1 +165,1 @@
-        if(Mouse.isButtonDown(0))
+        if(VirtualMouse.isButtonDown(0))
@@ -226,20 +229,21 @@
-            do
-            {
-                if(!Mouse.next())
-                {
-                    break;
-                }
-                int j1 = Mouse.getEventDWheel();
-                if(j1 != 0)
-                {
-                    if(j1 > 0)
-                    {
-                        j1 = -1;
-                    } else
-                    if(j1 < 0)
-                    {
-                        j1 = 1;
-                    }
-                    amountScrolled += (j1 * slotHeight) / 2;
-                }
-            } while(true);
+            // FIXME: temporarily disable gui slot scrolling because of frame based mouse events
+            //{
+            //    if(!Mouse.next())
+            //    {
+            //        break;
+            //    }
+            //    int j1 = Mouse.getEventDWheel();
+            //    if(j1 != 0)
+            //    {
+            //        if(j1 > 0)
+            //        {
+            //            j1 = -1;
+            //        } else
+            //        if(j1 < 0)
+            //        {
+            //            j1 = 1;
+            //        }
+            //        amountScrolled += (j1 * slotHeight) / 2;
+            //    }
+            //} while(true);
+        	// end
==========> GuiSlotStats.java
--- GuiSlotStats.java
+++ GuiSlotStats.java
@@ -11,0 +11,2 @@
+import com.minecrafttas.tasmodog.virtual.VirtualMouse;
+
@@ -53,1 +55,1 @@
-        if(!Mouse.isButtonDown(0))
+        if(!VirtualMouse.isButtonDown(0))
==========> MouseHelper.java
--- MouseHelper.java
+++ MouseHelper.java
@@ -13,0 +13,2 @@
+import com.minecrafttas.tasmodog.virtual.VirtualMouse;
+
@@ -58,2 +60,2 @@
-        deltaX = Mouse.getDX();
-        deltaY = Mouse.getDY();
+        deltaX = VirtualMouse.getVirtualDX();
+        deltaY = VirtualMouse.getVirtualDY();
==========> ThreadDownloadResources.java
--- ThreadDownloadResources.java
+++ ThreadDownloadResources.java
@@ -27,1 +27,1 @@
-        resourcesFolder = new File(file, "resources/");
+        resourcesFolder = new File("resources/"); // move resources folder to prevent sounds redownloading every launch
@@ -62,1 +62,1 @@
-                    downloadAndInstallResource(url, s, l, i);
+                    downloadAndInstallResource(new URL("https://maven.mgnet.work/main/archive/1.0-sounds/"), s, l, i); // download audio from up to date server
==========> World.java
--- World.java
+++ World.java
@@ -61,1 +61,1 @@
-    protected final ISaveHandler saveHandler;
+    public final ISaveHandler saveHandler;
==========> null