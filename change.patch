==========> Minecraft.java
--- Minecraft.java
+++ Minecraft.java
@@ -129,1 +129,1 @@
-    private static Minecraft theMinecraft;
+    public static Minecraft theMinecraft;
@@ -136,1 +136,1 @@
-    private Timer timer;
+    public Timer timer;
@@ -164,1 +164,1 @@
-    protected MinecraftApplet mcApplet;
+    public MinecraftApplet mcApplet;
@@ -180,1 +180,1 @@
-    private static File minecraftDir = null;
+    public static File minecraftDir = null;
@@ -566,0 +566,1 @@
+    	if (this.fullscreen) this.toggleFullscreen(); // disable fullscreen before exiting
@@ -602,1 +603,1 @@
-                System.exit(0);
+//                System.exit(0); // don't exit game after closing
@@ -621,0 +622,1 @@
+        com.minecrafttas.tasmodog.TASmod.instance.init(this); // initialize tasmod
@@ -681,0 +683,1 @@
+        com.minecrafttas.tasmodog.TASmod.instance.render(); // render tasmod
@@ -712,1 +715,1 @@
-        if(!Keyboard.isKeyDown(65))
+        if(!com.minecrafttas.tasmodog.virtual.VirtualKeyboard.isKeyDown(65))
@@ -734,4 +737,6 @@
-        if(!Display.isActive() && fullscreen)
-        {
-            toggleFullscreen();
-        }
+        // don't leave fullscreen on focus lose
+        //if(!Display.isActive() && fullscreen)
+        //{
+        //    toggleFullscreen();
+        //}
+        // End-Edit
@@ -755,1 +760,1 @@
-        if(Keyboard.isKeyDown(65))
+        if(com.minecrafttas.tasmodog.virtual.VirtualKeyboard.isKeyDown(65))
@@ -813,1 +818,1 @@
-        if(Keyboard.isKeyDown(60))
+        if(com.minecrafttas.tasmodog.virtual.VirtualKeyboard.isKeyDown(60))
@@ -1023,4 +1028,6 @@
-        if(!Display.isActive())
-        {
-            return;
-        }
+    	// ignore focus changes
+        //if(!Display.isActive())
+        //{
+        //    return;
+        //}
+    	// End-Edit
@@ -1211,1 +1218,1 @@
-            Display.setFullscreen(fullscreen);
+            com.minecrafttas.tasmodog.TASmod.instance.getMinecraftWindow().toggleFullscreen(this.fullscreen); // toggle fullscreen on the frame instead of the display
@@ -1316,0 +1323,23 @@
+        // Moved from EntityRenderer.java / hooked up to tick loop
+        if(inGameHasFocus) {
+            
+            float f1 = gameSettings.mouseSensitivity * 0.6F + 0.2F;
+            float f2 = f1 * f1 * f1 * 8F;
+            
+            mouseHelper.mouseXYChange();
+            
+            thePlayer.setAngles((float) mouseHelper.deltaX * f2, (float) mouseHelper.deltaY * f2);
+            
+        	if (com.minecrafttas.tasmodog.TASmod.instance.getInputContainer() instanceof com.minecrafttas.tasmodog.container.Playback && !((com.minecrafttas.tasmodog.container.Playback) com.minecrafttas.tasmodog.TASmod.instance.getInputContainer()).isVisible()) {
+        		com.minecrafttas.tasmodog.virtual.VirtualCamera.prevRotationPitch = com.minecrafttas.tasmodog.virtual.VirtualCamera.rotationPitch;
+        		com.minecrafttas.tasmodog.virtual.VirtualCamera.prevRotationYaw = com.minecrafttas.tasmodog.virtual.VirtualCamera.rotationYaw;
+        	} else {        		
+        		com.minecrafttas.tasmodog.virtual.VirtualCamera.prevRotationPitch = thePlayer.prevRotationPitch;
+        		com.minecrafttas.tasmodog.virtual.VirtualCamera.prevRotationYaw = thePlayer.prevRotationYaw;
+        	}
+        	com.minecrafttas.tasmodog.virtual.VirtualCamera.rotationPitch = thePlayer.rotationPitch;
+        	com.minecrafttas.tasmodog.virtual.VirtualCamera.rotationYaw = thePlayer.rotationYaw;
+        }
+        com.minecrafttas.tasmodog.virtual.VirtualCamera.lastX = com.minecrafttas.tasmodog.virtual.VirtualMouse.getEventX();
+        com.minecrafttas.tasmodog.virtual.VirtualCamera.lastY = com.minecrafttas.tasmodog.virtual.VirtualMouse.getEventY();
+        // End-Edit
@@ -1321,1 +1351,1 @@
-                if(!Mouse.next())
+                if(!com.minecrafttas.tasmodog.virtual.VirtualMouse.next())
@@ -1325,2 +1355,2 @@
-                KeyBinding.setKeyBindState(Mouse.getEventButton() - 100, Mouse.getEventButtonState());
-                if(Mouse.getEventButtonState())
+                KeyBinding.setKeyBindState(com.minecrafttas.tasmodog.virtual.VirtualMouse.getEventButton() - 100, com.minecrafttas.tasmodog.virtual.VirtualMouse.getEventButtonState());
+                if(com.minecrafttas.tasmodog.virtual.VirtualMouse.getEventButtonState())
@@ -1328,1 +1358,1 @@
-                    KeyBinding.onTick(Mouse.getEventButton() - 100);
+                    KeyBinding.onTick(com.minecrafttas.tasmodog.virtual.VirtualMouse.getEventButton() - 100);
@@ -1333,1 +1363,1 @@
-                    int i1 = Mouse.getEventDWheel();
+                    int i1 = com.minecrafttas.tasmodog.virtual.VirtualMouse.getEventDWheel();
@@ -1352,1 +1382,1 @@
-                        if(!inGameHasFocus && Mouse.getEventButtonState())
+                        if(!inGameHasFocus && com.minecrafttas.tasmodog.virtual.VirtualMouse.getEventButtonState())
@@ -1370,1 +1400,1 @@
-                if(!Keyboard.next())
+                if(!com.minecrafttas.tasmodog.virtual.VirtualKeyboard.next())
@@ -1374,2 +1404,2 @@
-                KeyBinding.setKeyBindState(Keyboard.getEventKey(), Keyboard.getEventKeyState());
-                if(Keyboard.getEventKeyState())
+                KeyBinding.setKeyBindState(com.minecrafttas.tasmodog.virtual.VirtualKeyboard.getEventKey(), com.minecrafttas.tasmodog.virtual.VirtualKeyboard.getEventKeyState());
+                if(com.minecrafttas.tasmodog.virtual.VirtualKeyboard.getEventKeyState())
@@ -1377,1 +1407,1 @@
-                    KeyBinding.onTick(Keyboard.getEventKey());
+                    KeyBinding.onTick(com.minecrafttas.tasmodog.virtual.VirtualKeyboard.getEventKey());
@@ -1379,1 +1409,1 @@
-                if(Keyboard.getEventKeyState())
+                if(com.minecrafttas.tasmodog.virtual.VirtualKeyboard.getEventKeyState())
@@ -1381,1 +1411,1 @@
-                    if(Keyboard.getEventKey() == 87)
+                    if(com.minecrafttas.tasmodog.virtual.VirtualKeyboard.getEventKey() == 87)
@@ -1391,1 +1421,1 @@
-                            if(Keyboard.getEventKey() == 1)
+                            if(com.minecrafttas.tasmodog.virtual.VirtualKeyboard.getEventKey() == 1)
@@ -1395,1 +1425,1 @@
-                            if(Keyboard.getEventKey() == 31 && Keyboard.isKeyDown(61))
+                            if(com.minecrafttas.tasmodog.virtual.VirtualKeyboard.getEventKey() == 31 && com.minecrafttas.tasmodog.virtual.VirtualKeyboard.isKeyDown(61))
@@ -1399,1 +1429,1 @@
-                            if(Keyboard.getEventKey() == 20 && Keyboard.isKeyDown(61))
+                            if(com.minecrafttas.tasmodog.virtual.VirtualKeyboard.getEventKey() == 20 && com.minecrafttas.tasmodog.virtual.VirtualKeyboard.isKeyDown(61))
@@ -1403,1 +1433,1 @@
-                            if(Keyboard.getEventKey() == 33 && Keyboard.isKeyDown(61))
+                            if(com.minecrafttas.tasmodog.virtual.VirtualKeyboard.getEventKey() == 33 && com.minecrafttas.tasmodog.virtual.VirtualKeyboard.isKeyDown(61))
@@ -1405,1 +1435,1 @@
-                                boolean flag = Keyboard.isKeyDown(42) | Keyboard.isKeyDown(54);
+                                boolean flag = com.minecrafttas.tasmodog.virtual.VirtualKeyboard.isKeyDown(42) | com.minecrafttas.tasmodog.virtual.VirtualKeyboard.isKeyDown(54);
@@ -1408,1 +1438,1 @@
-                            if(Keyboard.getEventKey() == 30 && Keyboard.isKeyDown(61))
+                            if(com.minecrafttas.tasmodog.virtual.VirtualKeyboard.getEventKey() == 30 && com.minecrafttas.tasmodog.virtual.VirtualKeyboard.isKeyDown(61))
@@ -1412,1 +1442,1 @@
-                            if(Keyboard.getEventKey() == 59)
+                            if(com.minecrafttas.tasmodog.virtual.VirtualKeyboard.getEventKey() == 59)
@@ -1416,1 +1446,1 @@
-                            if(Keyboard.getEventKey() == 61)
+                            if(com.minecrafttas.tasmodog.virtual.VirtualKeyboard.getEventKey() == 61)
@@ -1420,1 +1450,1 @@
-                            if(Keyboard.getEventKey() == 63)
+                            if(com.minecrafttas.tasmodog.virtual.VirtualKeyboard.getEventKey() == 63)
@@ -1428,1 +1458,1 @@
-                            if(Keyboard.getEventKey() == 66)
+                            if(com.minecrafttas.tasmodog.virtual.VirtualKeyboard.getEventKey() == 66)
@@ -1435,1 +1465,1 @@
-                            if(Keyboard.getEventKey() == 2 + i)
+                            if(com.minecrafttas.tasmodog.virtual.VirtualKeyboard.getEventKey() == 2 + i)
@@ -1443,1 +1473,1 @@
-                            if(Keyboard.getEventKey() == 11)
+                            if(com.minecrafttas.tasmodog.virtual.VirtualKeyboard.getEventKey() == 11)
@@ -1450,1 +1480,1 @@
-                                if(Keyboard.getEventKey() == 2 + j)
+                                if(com.minecrafttas.tasmodog.virtual.VirtualKeyboard.getEventKey() == 2 + j)
@@ -1543,0 +1573,1 @@
+        com.minecrafttas.tasmodog.TASmod.instance.tick(); // Tick the TASmod
@@ -1948,1 +1979,1 @@
-        Frame frame = new Frame("Minecraft");
+        Frame frame = new com.minecrafttas.tasmodog.MinecraftWindow("Minecraft"); // replace minecraft frame with custom one
==========> ChunkProvider.java
--- ChunkProvider.java
+++ ChunkProvider.java
@@ -96,0 +96,7 @@
+            // avoid inconsistent chunk generation by only rendering on tick thread
+            boolean check = false;
+            for (final StackTraceElement stackTraceElement : Thread.currentThread().getStackTrace())
+            	if (stackTraceElement.getMethodName().equals("runTick") || stackTraceElement.getMethodName().contains("changeWorld"))
+            		check = true;
+            if (!check) return emptyChunk;
+            // End-Edit
==========> EntityPlayerSP.java
--- EntityPlayerSP.java
+++ EntityPlayerSP.java
@@ -28,1 +28,1 @@
-    protected int sprintToggleTimer;
+    public int sprintToggleTimer;
==========> EntityRenderer.java
--- EntityRenderer.java
+++ EntityRenderer.java
@@ -399,2 +399,4 @@
-            GL11.glRotatef(entityliving.prevRotationPitch + (entityliving.rotationPitch - entityliving.prevRotationPitch) * f, 1.0F, 0.0F, 0.0F);
-            GL11.glRotatef(entityliving.prevRotationYaw + (entityliving.rotationYaw - entityliving.prevRotationYaw) * f + 180F, 0.0F, 1.0F, 0.0F);
+            // rotate camera to virtual camera instead of player camera
+        	GL11.glRotatef(com.minecrafttas.tasmodog.virtual.VirtualCamera.prevRotationPitch + (com.minecrafttas.tasmodog.virtual.VirtualCamera.rotationPitch - com.minecrafttas.tasmodog.virtual.VirtualCamera.prevRotationPitch) * f, 1.0F, 0.0F, 0.0F);
+        	GL11.glRotatef(com.minecrafttas.tasmodog.virtual.VirtualCamera.prevRotationYaw + (com.minecrafttas.tasmodog.virtual.VirtualCamera.rotationYaw - com.minecrafttas.tasmodog.virtual.VirtualCamera.prevRotationYaw) * f + 180F, 0.0F, 1.0F, 0.0F);
+            // End-Edit
@@ -682,8 +684,9 @@
-        if(!Display.isActive())
-        {
-            if(System.currentTimeMillis() - prevFrameTime > 500L)
-            {
-                mc.displayInGameMenu();
-            }
-        } else
-        {
+        // don't pause game if inactive for more than 500 milliseconds
+        //if(!Display.isActive())
+        //{
+        //    if(System.currentTimeMillis() - prevFrameTime > 500L)
+        //    {
+        //        mc.displayInGameMenu();
+        //    }
+        //} else
+        //{
@@ -691,1 +694,2 @@
-        }
+        //}
+        // End-Edit
@@ -695,1 +699,1 @@
-            mc.mouseHelper.mouseXYChange();
+            // rotate virtual camera instead of actual player (see minecraft runTick for player camera rotation)
@@ -698,20 +702,6 @@
-            float f3 = (float)mc.mouseHelper.deltaX * f2;
-            float f4 = (float)mc.mouseHelper.deltaY * f2;
-            int l = 1;
-            if(mc.gameSettings.invertMouse)
-            {
-                l = -1;
-            }
-            if(mc.gameSettings.smoothCamera)
-            {
-                smoothCamYaw += f3;
-                smoothCamPitch += f4;
-                float f5 = f - smoothCamPartialTicks;
-                smoothCamPartialTicks = f;
-                f3 = smoothCamFilterX * f5;
-                f4 = smoothCamFilterY * f5;
-                mc.thePlayer.setAngles(f3, f4 * (float)l);
-            } else
-            {
-                mc.thePlayer.setAngles(f3, f4 * (float)l);
-            }
+
+            int dx = com.minecrafttas.tasmodog.virtual.VirtualMouse.getDX();
+            int dy = com.minecrafttas.tasmodog.virtual.VirtualMouse.getDY();
+            
+            com.minecrafttas.tasmodog.virtual.VirtualCamera.setFakeAngles(dx * f2, dy * f2);
+            // End-Edit
@@ -728,2 +718,2 @@
-        int k = (Mouse.getX() * i) / mc.displayWidth;
-        int i1 = j - (Mouse.getY() * j) / mc.displayHeight - 1;
+        int k = (com.minecrafttas.tasmodog.virtual.VirtualCamera.lastX * i) / mc.displayWidth;
+        int i1 = j - (com.minecrafttas.tasmodog.virtual.VirtualCamera.lastY * j) / mc.displayHeight - 1;
==========> GuiAchievement.java
--- GuiAchievement.java
+++ GuiAchievement.java
@@ -37,1 +37,1 @@
-        achievementTime = System.currentTimeMillis();
+        achievementTime = com.minecrafttas.tasmodog.TASmod.instance.getTickrateChanger().currentTimeMillis();
@@ -46,1 +46,1 @@
-        achievementTime = System.currentTimeMillis() - 2500L;
+        achievementTime = com.minecrafttas.tasmodog.TASmod.instance.getTickrateChanger().currentTimeMillis() - 2500L;
@@ -78,1 +78,1 @@
-        double d = (double)(System.currentTimeMillis() - achievementTime) / 3000D;
+        double d = (double)(com.minecrafttas.tasmodog.TASmod.instance.getTickrateChanger().currentTimeMillis() - achievementTime) / 3000D;
==========> GuiAchievements.java
--- GuiAchievements.java
+++ GuiAchievements.java
@@ -10,1 +10,0 @@
-import org.lwjgl.input.Mouse;
@@ -83,1 +82,1 @@
-        if(Mouse.isButtonDown(0))
+        if(com.minecrafttas.tasmodog.virtual.VirtualMouse.isButton0Down)
==========> GuiContainer.java
--- GuiContainer.java
+++ GuiContainer.java
@@ -253,1 +253,1 @@
-                boolean flag1 = j1 != -999 && (Keyboard.isKeyDown(42) || Keyboard.isKeyDown(54));
+                boolean flag1 = j1 != -999 && (com.minecrafttas.tasmodog.virtual.VirtualKeyboard.isKeyDown(42) || com.minecrafttas.tasmodog.virtual.VirtualKeyboard.isKeyDown(54));
==========> GuiContainerCreative.java
--- GuiContainerCreative.java
+++ GuiContainerCreative.java
@@ -144,1 +144,1 @@
-        int i = Mouse.getEventDWheel();
+        int i = com.minecrafttas.tasmodog.virtual.VirtualMouse.getEventDWheel();
@@ -171,1 +171,1 @@
-        boolean flag = Mouse.isButtonDown(0);
+        boolean flag = com.minecrafttas.tasmodog.virtual.VirtualMouse.isButton0Down;
==========> GuiIngame.java
--- GuiIngame.java
+++ GuiIngame.java
@@ -79,0 +79,4 @@
+        // draw info hud
+        if (((this.mc.currentScreen instanceof com.minecrafttas.tasmodog.tools.InfoHud) || (this.mc.currentScreen == null)) && this.mc.theWorld != null)
+        	com.minecrafttas.tasmodog.TASmod.instance.getInfoHud().drawHud();
+        // End-Edit
==========> GuiScreen.java
--- GuiScreen.java
+++ GuiScreen.java
@@ -119,2 +119,2 @@
-        for(; Mouse.next(); handleMouseInput()) { }
-        for(; Keyboard.next(); handleKeyboardInput()) { }
+        for(; com.minecrafttas.tasmodog.virtual.VirtualMouse.next(); handleMouseInput()) { }
+        for(; com.minecrafttas.tasmodog.virtual.VirtualKeyboard.next(); handleKeyboardInput()) { }
@@ -125,1 +125,1 @@
-        if(Mouse.getEventButtonState())
+        if(com.minecrafttas.tasmodog.virtual.VirtualMouse.getEventButtonState())
@@ -127,3 +127,3 @@
-            int i = (Mouse.getEventX() * width) / mc.displayWidth;
-            int k = height - (Mouse.getEventY() * height) / mc.displayHeight - 1;
-            mouseClicked(i, k, Mouse.getEventButton());
+            int i = (com.minecrafttas.tasmodog.virtual.VirtualMouse.getEventX() * width) / mc.displayWidth;
+            int k = height - (com.minecrafttas.tasmodog.virtual.VirtualMouse.getEventY() * height) / mc.displayHeight - 1;
+            mouseClicked(i, k, com.minecrafttas.tasmodog.virtual.VirtualMouse.getEventButton());
@@ -132,3 +132,3 @@
-            int j = (Mouse.getEventX() * width) / mc.displayWidth;
-            int l = height - (Mouse.getEventY() * height) / mc.displayHeight - 1;
-            mouseMovedOrUp(j, l, Mouse.getEventButton());
+            int j = (com.minecrafttas.tasmodog.virtual.VirtualMouse.getEventX() * width) / mc.displayWidth;
+            int l = height - (com.minecrafttas.tasmodog.virtual.VirtualMouse.getEventY() * height) / mc.displayHeight - 1;
+            mouseMovedOrUp(j, l, com.minecrafttas.tasmodog.virtual.VirtualMouse.getEventButton());
@@ -140,1 +140,1 @@
-        if(Keyboard.getEventKeyState())
+        if(com.minecrafttas.tasmodog.virtual.VirtualKeyboard.getEventKeyState())
@@ -142,1 +142,1 @@
-            if(Keyboard.getEventKey() == 87)
+            if(com.minecrafttas.tasmodog.virtual.VirtualKeyboard.getEventKey() == 87)
@@ -147,1 +147,1 @@
-            keyTyped(Keyboard.getEventCharacter(), Keyboard.getEventKey());
+            keyTyped(com.minecrafttas.tasmodog.virtual.VirtualKeyboard.getEventCharacter(), com.minecrafttas.tasmodog.virtual.VirtualKeyboard.getEventKey());
==========> GuiSlot.java
--- GuiSlot.java
+++ GuiSlot.java
@@ -9,0 +9,1 @@
+
@@ -162,1 +163,1 @@
-        if(Mouse.isButtonDown(0))
+        if(com.minecrafttas.tasmodog.virtual.VirtualMouse.isButtonDown(0))
@@ -226,20 +227,21 @@
-            do
-            {
-                if(!Mouse.next())
-                {
-                    break;
-                }
-                int j1 = Mouse.getEventDWheel();
-                if(j1 != 0)
-                {
-                    if(j1 > 0)
-                    {
-                        j1 = -1;
-                    } else
-                    if(j1 < 0)
-                    {
-                        j1 = 1;
-                    }
-                    amountScrolled += (j1 * slotHeight) / 2;
-                }
-            } while(true);
+            // FIXME: temporarily disable gui slot scrolling because of frame based mouse events
+            //{
+            //    if(!Mouse.next())
+            //    {
+            //        break;
+            //    }
+            //    int j1 = Mouse.getEventDWheel();
+            //    if(j1 != 0)
+            //    {
+            //        if(j1 > 0)
+            //        {
+            //            j1 = -1;
+            //        } else
+            //        if(j1 < 0)
+            //        {
+            //            j1 = 1;
+            //        }
+            //        amountScrolled += (j1 * slotHeight) / 2;
+            //    }
+            //} while(true);
+        	// End-Edit
==========> GuiSlotStats.java
--- GuiSlotStats.java
+++ GuiSlotStats.java
@@ -53,1 +53,1 @@
-        if(!Mouse.isButtonDown(0))
+        if(!com.minecrafttas.tasmodog.virtual.VirtualMouse.isButtonDown(0))
==========> MouseHelper.java
--- MouseHelper.java
+++ MouseHelper.java
@@ -45,1 +45,1 @@
-        Mouse.setGrabbed(true);
+    	com.minecrafttas.tasmodog.virtual.VirtualMouse.setGrabbed(true);
@@ -52,2 +52,2 @@
-        Mouse.setCursorPosition(windowComponent.getWidth() / 2, windowComponent.getHeight() / 2);
-        Mouse.setGrabbed(false);
+    	com.minecrafttas.tasmodog.virtual.VirtualMouse.setCursorPosition(windowComponent.getWidth() / 2, windowComponent.getHeight() / 2);
+    	com.minecrafttas.tasmodog.virtual.VirtualMouse.setGrabbed(false);
@@ -58,2 +58,2 @@
-        deltaX = Mouse.getDX();
-        deltaY = Mouse.getDY();
+        deltaX = com.minecrafttas.tasmodog.virtual.VirtualMouse.getVirtualDX();
+        deltaY = com.minecrafttas.tasmodog.virtual.VirtualMouse.getVirtualDY();
==========> ThreadDownloadResources.java
--- ThreadDownloadResources.java
+++ ThreadDownloadResources.java
@@ -27,1 +27,1 @@
-        resourcesFolder = new File(file, "resources/");
+        resourcesFolder = new File("resources/"); // move resources folder to prevent sounds redownloading every launch
@@ -62,1 +62,2 @@
-                    downloadAndInstallResource(url, s, l, i);
+                    // This is just a small change to fix the game audio, because the files aren't online on the original link anymore. By doing this i download the ogg files from my website instead.
+                    downloadAndInstallResource(new URL("https://maven.mgnet.work/main/archive/1.0-sounds/"), s, l, i);
