==========> Minecraft.java
--- Minecraft.java
+++ Minecraft.java
@@ -121,0 +121,6 @@
+import com.minecrafttas.tasmodog.TASmod;
+import com.minecrafttas.tasmodog.MinecraftWindow;
+import com.minecrafttas.tasmodog.tools.FakeCamera;
+import com.minecrafttas.tasmodog.virtual.VirtualKeyboard;
+import com.minecrafttas.tasmodog.virtual.VirtualMouse;
+
@@ -136,1 +142,1 @@
-    private Timer timer;
+    public Timer timer;
@@ -180,1 +186,1 @@
-    private static File minecraftDir = null;
+    public static File minecraftDir = null;
@@ -566,0 +572,1 @@
+    	if (this.fullscreen) this.toggleFullscreen(); // disable fullscreen before exiting
@@ -602,1 +609,1 @@
-                System.exit(0);
+//                System.exit(0); // don't exit game after closing
@@ -621,0 +628,1 @@
+        TASmod.instance.init(this); // initialize tasmod
@@ -681,0 +689,1 @@
+        TASmod.instance.render(); // render tasmod
@@ -712,1 +721,1 @@
-        if(!Keyboard.isKeyDown(65))
+        if(!VirtualKeyboard.isKeyDown(65))
@@ -734,4 +743,6 @@
-        if(!Display.isActive() && fullscreen)
-        {
-            toggleFullscreen();
-        }
+        // don't leave fullscreen on focus lose
+        //if(!Display.isActive() && fullscreen)
+        //{
+        //    toggleFullscreen();
+        //}
+        // end
@@ -755,1 +766,1 @@
-        if(Keyboard.isKeyDown(65))
+        if(VirtualKeyboard.isKeyDown(65))
@@ -813,1 +824,1 @@
-        if(Keyboard.isKeyDown(60))
+        if(VirtualKeyboard.isKeyDown(60))
@@ -1023,4 +1034,6 @@
-        if(!Display.isActive())
-        {
-            return;
-        }
+    	// ignore focus changes
+        //if(!Display.isActive())
+        //{
+        //    return;
+        //}
+    	// end
@@ -1211,1 +1224,1 @@
-            Display.setFullscreen(fullscreen);
+            TASmod.instance.getMinecraftWindow().toggleFullscreen(this.fullscreen); // toggle fullscreen on the frame instead of the display
@@ -1316,0 +1329,16 @@
+        // Moved from EntityRenderer.java / hooked up to tick loop
+        if(this.inGameHasFocus) {
+            
+            float f1 = this.gameSettings.mouseSensitivity * 0.6F + 0.2F;
+            float f2 = f1 * f1 * f1 * 8F;
+            
+            this.mouseHelper.mouseXYChange();
+            
+            this.thePlayer.setAngles(this.mouseHelper.deltaX * f2, this.mouseHelper.deltaY * f2);
+            
+        	FakeCamera.prevPitch = this.thePlayer.prevRotationPitch;
+        	FakeCamera.prevYaw = this.thePlayer.prevRotationYaw;
+        	FakeCamera.pitch = this.thePlayer.rotationPitch;
+        	FakeCamera.yaw = this.thePlayer.rotationYaw;
+        }
+        // end
@@ -1321,1 +1350,1 @@
-                if(!Mouse.next())
+                if(!VirtualMouse.next())
@@ -1325,2 +1354,2 @@
-                KeyBinding.setKeyBindState(Mouse.getEventButton() - 100, Mouse.getEventButtonState());
-                if(Mouse.getEventButtonState())
+                KeyBinding.setKeyBindState(VirtualMouse.getEventButton() - 100, VirtualMouse.getEventButtonState());
+                if(VirtualMouse.getEventButtonState())
@@ -1328,1 +1357,1 @@
-                    KeyBinding.onTick(Mouse.getEventButton() - 100);
+                    KeyBinding.onTick(VirtualMouse.getEventButton() - 100);
@@ -1333,1 +1362,1 @@
-                    int i1 = Mouse.getEventDWheel();
+                    int i1 = VirtualMouse.getEventDWheel();
@@ -1352,1 +1381,1 @@
-                        if(!inGameHasFocus && Mouse.getEventButtonState())
+                        if(!inGameHasFocus && VirtualMouse.getEventButtonState())
@@ -1370,1 +1399,1 @@
-                if(!Keyboard.next())
+                if(!VirtualKeyboard.next())
@@ -1374,2 +1403,2 @@
-                KeyBinding.setKeyBindState(Keyboard.getEventKey(), Keyboard.getEventKeyState());
-                if(Keyboard.getEventKeyState())
+                KeyBinding.setKeyBindState(VirtualKeyboard.getEventKey(), VirtualKeyboard.getEventKeyState());
+                if(VirtualKeyboard.getEventKeyState())
@@ -1377,1 +1406,1 @@
-                    KeyBinding.onTick(Keyboard.getEventKey());
+                    KeyBinding.onTick(VirtualKeyboard.getEventKey());
@@ -1379,1 +1408,1 @@
-                if(Keyboard.getEventKeyState())
+                if(VirtualKeyboard.getEventKeyState())
@@ -1381,1 +1410,1 @@
-                    if(Keyboard.getEventKey() == 87)
+                    if(VirtualKeyboard.getEventKey() == 87)
@@ -1391,1 +1420,1 @@
-                            if(Keyboard.getEventKey() == 1)
+                            if(VirtualKeyboard.getEventKey() == 1)
@@ -1395,1 +1424,1 @@
-                            if(Keyboard.getEventKey() == 31 && Keyboard.isKeyDown(61))
+                            if(VirtualKeyboard.getEventKey() == 31 && VirtualKeyboard.isKeyDown(61))
@@ -1399,1 +1428,1 @@
-                            if(Keyboard.getEventKey() == 20 && Keyboard.isKeyDown(61))
+                            if(VirtualKeyboard.getEventKey() == 20 && VirtualKeyboard.isKeyDown(61))
@@ -1403,1 +1432,1 @@
-                            if(Keyboard.getEventKey() == 33 && Keyboard.isKeyDown(61))
+                            if(VirtualKeyboard.getEventKey() == 33 && VirtualKeyboard.isKeyDown(61))
@@ -1405,1 +1434,1 @@
-                                boolean flag = Keyboard.isKeyDown(42) | Keyboard.isKeyDown(54);
+                                boolean flag = VirtualKeyboard.isKeyDown(42) | VirtualKeyboard.isKeyDown(54);
@@ -1408,1 +1437,1 @@
-                            if(Keyboard.getEventKey() == 30 && Keyboard.isKeyDown(61))
+                            if(VirtualKeyboard.getEventKey() == 30 && VirtualKeyboard.isKeyDown(61))
@@ -1412,1 +1441,1 @@
-                            if(Keyboard.getEventKey() == 59)
+                            if(VirtualKeyboard.getEventKey() == 59)
@@ -1416,1 +1445,1 @@
-                            if(Keyboard.getEventKey() == 61)
+                            if(VirtualKeyboard.getEventKey() == 61)
@@ -1420,1 +1449,1 @@
-                            if(Keyboard.getEventKey() == 63)
+                            if(VirtualKeyboard.getEventKey() == 63)
@@ -1428,1 +1457,1 @@
-                            if(Keyboard.getEventKey() == 66)
+                            if(VirtualKeyboard.getEventKey() == 66)
@@ -1435,1 +1464,1 @@
-                            if(Keyboard.getEventKey() == 2 + i)
+                            if(VirtualKeyboard.getEventKey() == 2 + i)
@@ -1443,1 +1472,1 @@
-                            if(Keyboard.getEventKey() == 11)
+                            if(VirtualKeyboard.getEventKey() == 11)
@@ -1450,1 +1479,1 @@
-                                if(Keyboard.getEventKey() == 2 + j)
+                                if(VirtualKeyboard.getEventKey() == 2 + j)
@@ -1543,0 +1572,1 @@
+        TASmod.instance.tick(); // tick tasmod
@@ -1948,1 +1978,1 @@
-        Frame frame = new Frame("Minecraft");
+        Frame frame = new MinecraftWindow("Minecraft"); // replace minecraft frame with custom one
==========> ChunkProvider.java
--- ChunkProvider.java
+++ ChunkProvider.java
@@ -96,0 +96,7 @@
+            // avoid inconsistent chunk generation by only rendering on tick thread
+            boolean check = false;
+            for (final StackTraceElement stackTraceElement : Thread.currentThread().getStackTrace())
+            	if (stackTraceElement.getMethodName().equals("runTick") || stackTraceElement.getMethodName().contains("changeWorld"))
+            		check = true;
+            if (!check) return emptyChunk;
+            // end
==========> EntityPlayerSP.java
--- EntityPlayerSP.java
+++ EntityPlayerSP.java
@@ -28,1 +28,1 @@
-    protected int sprintToggleTimer;
+    public int sprintToggleTimer;
==========> EntityRenderer.java
--- EntityRenderer.java
+++ EntityRenderer.java
@@ -18,0 +18,3 @@
+import com.minecrafttas.tasmodog.tools.FakeCamera;
+import com.minecrafttas.tasmodog.virtual.VirtualMouse;
+
@@ -399,2 +402,4 @@
-            GL11.glRotatef(entityliving.prevRotationPitch + (entityliving.rotationPitch - entityliving.prevRotationPitch) * f, 1.0F, 0.0F, 0.0F);
-            GL11.glRotatef(entityliving.prevRotationYaw + (entityliving.rotationYaw - entityliving.prevRotationYaw) * f + 180F, 0.0F, 1.0F, 0.0F);
+            // rotate camera to virtual camera instead of player camera
+        	GL11.glRotatef(FakeCamera.prevPitch + (FakeCamera.pitch - FakeCamera.pitch) * f, 1.0F, 0.0F, 0.0F);
+        	GL11.glRotatef(FakeCamera.prevYaw + (FakeCamera.yaw - FakeCamera.yaw) * f + 180F, 0.0F, 1.0F, 0.0F);
+            // end
@@ -682,8 +687,9 @@
-        if(!Display.isActive())
-        {
-            if(System.currentTimeMillis() - prevFrameTime > 500L)
-            {
-                mc.displayInGameMenu();
-            }
-        } else
-        {
+        // don't pause game if inactive for more than 500 milliseconds
+        //if(!Display.isActive())
+        //{
+        //    if(System.currentTimeMillis() - prevFrameTime > 500L)
+        //    {
+        //        mc.displayInGameMenu();
+        //    }
+        //} else
+        //{
@@ -691,1 +697,2 @@
-        }
+        //}
+        // end
@@ -695,1 +702,1 @@
-            mc.mouseHelper.mouseXYChange();
+            // rotate virtual camera instead of actual player (see minecraft runTick for player camera rotation)
@@ -698,20 +705,6 @@
-            float f3 = (float)mc.mouseHelper.deltaX * f2;
-            float f4 = (float)mc.mouseHelper.deltaY * f2;
-            int l = 1;
-            if(mc.gameSettings.invertMouse)
-            {
-                l = -1;
-            }
-            if(mc.gameSettings.smoothCamera)
-            {
-                smoothCamYaw += f3;
-                smoothCamPitch += f4;
-                float f5 = f - smoothCamPartialTicks;
-                smoothCamPartialTicks = f;
-                f3 = smoothCamFilterX * f5;
-                f4 = smoothCamFilterY * f5;
-                mc.thePlayer.setAngles(f3, f4 * (float)l);
-            } else
-            {
-                mc.thePlayer.setAngles(f3, f4 * (float)l);
-            }
+
+            int dx = VirtualMouse.getDX();
+            int dy = VirtualMouse.getDY();
+            
+            FakeCamera.setFakeAngles(dx * f2, dy * f2);
+            // end
@@ -728,2 +721,2 @@
-        int k = (Mouse.getX() * i) / mc.displayWidth;
-        int i1 = j - (Mouse.getY() * j) / mc.displayHeight - 1;
+        int k = (VirtualMouse.getX() * i) / mc.displayWidth;
+        int i1 = j - (VirtualMouse.getY() * j) / mc.displayHeight - 1;
==========> GuiAchievement.java
--- GuiAchievement.java
+++ GuiAchievement.java
@@ -10,0 +10,2 @@
+import com.minecrafttas.tasmodog.TASmod;
+
@@ -37,1 +39,1 @@
-        achievementTime = System.currentTimeMillis();
+        achievementTime = TASmod.instance.getTickrateChanger().currentTimeMillis();
@@ -46,1 +48,1 @@
-        achievementTime = System.currentTimeMillis() - 2500L;
+        achievementTime = TASmod.instance.getTickrateChanger().currentTimeMillis() - 2500L;
@@ -78,1 +80,1 @@
-        double d = (double)(System.currentTimeMillis() - achievementTime) / 3000D;
+        double d = (double)(TASmod.instance.getTickrateChanger().currentTimeMillis() - achievementTime) / 3000D;
==========> GuiAchievements.java
--- GuiAchievements.java
+++ GuiAchievements.java
@@ -10,1 +10,0 @@
-import org.lwjgl.input.Mouse;
@@ -13,0 +12,2 @@
+import com.minecrafttas.tasmodog.virtual.VirtualMouse;
+
@@ -83,1 +84,1 @@
-        if(Mouse.isButtonDown(0))
+        if(VirtualMouse.isButtonDown(0))
==========> GuiContainer.java
--- GuiContainer.java
+++ GuiContainer.java
@@ -12,0 +12,2 @@
+import com.minecrafttas.tasmodog.virtual.VirtualKeyboard;
+
@@ -253,1 +255,1 @@
-                boolean flag1 = j1 != -999 && (Keyboard.isKeyDown(42) || Keyboard.isKeyDown(54));
+                boolean flag1 = j1 != -999 && (VirtualKeyboard.isKeyDown(42) || VirtualKeyboard.isKeyDown(54));
==========> GuiContainerCreative.java
--- GuiContainerCreative.java
+++ GuiContainerCreative.java
@@ -12,0 +12,2 @@
+import com.minecrafttas.tasmodog.virtual.VirtualMouse;
+
@@ -144,1 +146,1 @@
-        int i = Mouse.getEventDWheel();
+        int i = VirtualMouse.getEventDWheel();
@@ -171,1 +173,1 @@
-        boolean flag = Mouse.isButtonDown(0);
+        boolean flag = VirtualMouse.isButtonDown(0);
==========> GuiIngame.java
--- GuiIngame.java
+++ GuiIngame.java
@@ -13,0 +13,3 @@
+import com.minecrafttas.tasmodog.TASmod;
+import com.minecrafttas.tasmodog.tools.InfoHud;
+
@@ -79,0 +82,4 @@
+        // draw info hud
+        if (((this.mc.currentScreen instanceof InfoHud) || (this.mc.currentScreen == null)) && this.mc.theWorld != null)
+        	TASmod.instance.getInfoHud().drawHud();
+        // end
==========> GuiScreen.java
--- GuiScreen.java
+++ GuiScreen.java
@@ -14,0 +14,3 @@
+import com.minecrafttas.tasmodog.virtual.VirtualKeyboard;
+import com.minecrafttas.tasmodog.virtual.VirtualMouse;
+
@@ -119,2 +122,2 @@
-        for(; Mouse.next(); handleMouseInput()) { }
-        for(; Keyboard.next(); handleKeyboardInput()) { }
+        for(; VirtualMouse.next(); handleMouseInput()) { }
+        for(; VirtualKeyboard.next(); handleKeyboardInput()) { }
@@ -125,1 +128,1 @@
-        if(Mouse.getEventButtonState())
+        if(VirtualMouse.getEventButtonState())
@@ -127,3 +130,3 @@
-            int i = (Mouse.getEventX() * width) / mc.displayWidth;
-            int k = height - (Mouse.getEventY() * height) / mc.displayHeight - 1;
-            mouseClicked(i, k, Mouse.getEventButton());
+            int i = (VirtualMouse.getEventX() * width) / mc.displayWidth;
+            int k = height - (VirtualMouse.getEventY() * height) / mc.displayHeight - 1;
+            mouseClicked(i, k, VirtualMouse.getEventButton());
@@ -132,3 +135,3 @@
-            int j = (Mouse.getEventX() * width) / mc.displayWidth;
-            int l = height - (Mouse.getEventY() * height) / mc.displayHeight - 1;
-            mouseMovedOrUp(j, l, Mouse.getEventButton());
+            int j = (VirtualMouse.getEventX() * width) / mc.displayWidth;
+            int l = height - (VirtualMouse.getEventY() * height) / mc.displayHeight - 1;
+            mouseMovedOrUp(j, l, VirtualMouse.getEventButton());
@@ -140,1 +143,1 @@
-        if(Keyboard.getEventKeyState())
+        if(VirtualKeyboard.getEventKeyState())
@@ -142,1 +145,1 @@
-            if(Keyboard.getEventKey() == 87)
+            if(VirtualKeyboard.getEventKey() == 87)
@@ -147,1 +150,1 @@
-            keyTyped(Keyboard.getEventCharacter(), Keyboard.getEventKey());
+            keyTyped(VirtualKeyboard.getEventCharacter(), VirtualKeyboard.getEventKey());
==========> GuiSlot.java
--- GuiSlot.java
+++ GuiSlot.java
@@ -9,0 +9,1 @@
+
@@ -12,0 +13,2 @@
+import com.minecrafttas.tasmodog.virtual.VirtualMouse;
+
@@ -162,1 +165,1 @@
-        if(Mouse.isButtonDown(0))
+        if(VirtualMouse.isButtonDown(0))
@@ -226,20 +229,21 @@
-            do
-            {
-                if(!Mouse.next())
-                {
-                    break;
-                }
-                int j1 = Mouse.getEventDWheel();
-                if(j1 != 0)
-                {
-                    if(j1 > 0)
-                    {
-                        j1 = -1;
-                    } else
-                    if(j1 < 0)
-                    {
-                        j1 = 1;
-                    }
-                    amountScrolled += (j1 * slotHeight) / 2;
-                }
-            } while(true);
+            // FIXME: temporarily disable gui slot scrolling because of frame based mouse events
+            //{
+            //    if(!Mouse.next())
+            //    {
+            //        break;
+            //    }
+            //    int j1 = Mouse.getEventDWheel();
+            //    if(j1 != 0)
+            //    {
+            //        if(j1 > 0)
+            //        {
+            //            j1 = -1;
+            //        } else
+            //        if(j1 < 0)
+            //        {
+            //            j1 = 1;
+            //        }
+            //        amountScrolled += (j1 * slotHeight) / 2;
+            //    }
+            //} while(true);
+        	// end
==========> GuiSlotStats.java
--- GuiSlotStats.java
+++ GuiSlotStats.java
@@ -11,0 +11,2 @@
+import com.minecrafttas.tasmodog.virtual.VirtualMouse;
+
@@ -53,1 +55,1 @@
-        if(!Mouse.isButtonDown(0))
+        if(!VirtualMouse.isButtonDown(0))
==========> MouseHelper.java
--- MouseHelper.java
+++ MouseHelper.java
@@ -13,0 +13,2 @@
+import com.minecrafttas.tasmodog.virtual.VirtualMouse;
+
@@ -58,2 +60,2 @@
-        deltaX = Mouse.getDX();
-        deltaY = Mouse.getDY();
+        deltaX = VirtualMouse.getVirtualDX();
+        deltaY = VirtualMouse.getVirtualDY();
==========> ThreadDownloadResources.java
--- ThreadDownloadResources.java
+++ ThreadDownloadResources.java
@@ -27,1 +27,1 @@
-        resourcesFolder = new File(file, "resources/");
+        resourcesFolder = new File("resources/"); // move resources folder to prevent sounds redownloading every launch
@@ -62,1 +62,1 @@
-                    downloadAndInstallResource(url, s, l, i);
+                    downloadAndInstallResource(new URL("https://maven.mgnet.work/main/archive/1.0-sounds/"), s, l, i); // download audio from up to date server
==========> World.java
--- World.java
+++ World.java
@@ -61,1 +61,1 @@
-    protected final ISaveHandler saveHandler;
+    public final ISaveHandler saveHandler;
==========> null